--------------------------------------------------------
-- Archivo creado  - mi√©rcoles-enero-02-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_AFILIACION
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_AFILIACION"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_AFILIACION_ENCUESTA
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_AFILIACION_ENCUESTA"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_CONTRATANTE_BENEFI
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_CONTRATANTE_BENEFI"  MINVALUE 1 MAXVALUE 9999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_LOG_USUARIOS_SISTEMA
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_LOG_USUARIOS_SISTEMA"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 241 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_PERSONA
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_PERSONA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_PERSONA_TIPOPER
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_PERSONA_TIPOPER"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_RESPUESTAS_MARCADAS
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_RESPUESTAS_MARCADAS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_ROL_USUARIO
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_ROL_USUARIO"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VDIR_SEQ_USUARIO
--------------------------------------------------------

   CREATE SEQUENCE  "VDIRMP"."VDIR_SEQ_USUARIO"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 ORDER  NOCYCLE ;
-- No se ha podido presentar el DDL TABLE para el objeto VDIRMP.BIN$uPY5smBzT5CXhVfOPrsBMw==$0 mientras que DBMS_METADATA intenta utilizar el generador interno.
CREATE TABLE "BIN$uPY5smBzT5CXhVfOPrsBMw==$0" 
(
  COD_LOG_USUARIOS_SISTEMA NUMBER(20, 0) NOT NULL 
, USUARIO VARCHAR2(50 BYTE) NOT NULL 
, FECHA DATE DEFAULT SYSDATE 
, IP VARCHAR2(30 BYTE) NOT NULL 
, NAVEGADOR VARCHAR2(100 BYTE) NOT NULL 
, CONSTRAINT "BIN$oeZoV+saS/y2osD0lQm0NA==$0" PRIMARY KEY 
  (
    COD_LOG_USUARIOS_SISTEMA 
  )
  ENABLE 
)
--------------------------------------------------------
--  DDL for Table VDIR_AFILIACION
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_AFILIACION" 
   (	"COD_AFILIACION" NUMBER(16,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE, 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_AFILIACION_AUDITORIA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" 
   (	"COD_AFILIACION_AUDITORIA" NUMBER(6,0), 
	"COD_AFILIACION" NUMBER(14,0), 
	"COD_AUDITOR" NUMBER(12,0), 
	"COD_ESTADO" NUMBER(2,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE, 
	"ESTADO_SALUD" VARCHAR2(4000 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_BARRIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_BARRIO" 
   (	"COD_BARRIO" NUMBER(6,0), 
	"DES_BARRIO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"COD_MUNICIPIO" NUMBER(6,0), 
	"COD_COMUNA" NUMBER(6,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_BENEFICIARIO_PROGRAMA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" 
   (	"COD_BENEFICIARIO_PROGRAMA" NUMBER(16,0), 
	"COD_PROGRAMA" NUMBER(16,0), 
	"COD_BENEFICIARIO" NUMBER(16,0), 
	"COD_TARIFA" NUMBER(16,0), 
	"COD_AFILIACION" NUMBER(16,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_COMUNA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_COMUNA" 
   (	"COD_COMUNA" NUMBER(6,0), 
	"DES_COMUNA" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_CONTRATANTE_BENEFICIARIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" 
   (	"COD_CONTRATANTE_BENEFICIARIO" NUMBER(16,0), 
	"COD_CONTRATANTE" NUMBER(16,0), 
	"COD_BENEFICIARIO" NUMBER(16,0), 
	"COD_PARENTESCO" NUMBER(2,0), 
	"COD_AFILIACION" NUMBER(16,0), 
	"COD_TIPO_SOLICITUD" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_DEPARTAMENTO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_DEPARTAMENTO" 
   (	"COD_DEPARTAMENTO" NUMBER(6,0), 
	"COD_PAIS" NUMBER(6,0), 
	"DES_DEPARTAMENTO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ENCUESTA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ENCUESTA" 
   (	"COD_ENCUESTA" NUMBER(6,0), 
	"DES_ENCUESTA" VARCHAR2(100 BYTE), 
	"OBSERVACION" VARCHAR2(4000 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ENCUESTA_PERSONA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" 
   (	"COD_ENCUESTA_PERSONA" NUMBER(16,0), 
	"COD_AFILIACION" NUMBER(14,0), 
	"COD_ENCUESTA" NUMBER(6,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE, 
	"COD_PERSONA" NUMBER(16,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_EPS
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_EPS" 
   (	"COD_EPS" NUMBER, 
	"DES_EPS" VARCHAR2(100 BYTE), 
	"COD_ESTADO" NUMBER, 
	"SIGLA_EPS" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ESTADO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ESTADO" 
   (	"COD_ESTADO" NUMBER(*,0), 
	"DES_ESTADO" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ESTADO_CIVIL
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ESTADO_CIVIL" 
   (	"COD_ESTADO_CIVIL" NUMBER, 
	"DES_ESTADO_CIVIL" VARCHAR2(20 BYTE), 
	"COD_ESTADO" NUMBER, 
	"ABR_ESTADO_CIVIL" VARCHAR2(2 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FACTURA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FACTURA" 
   (	"COD_FACTURA" NUMBER(16,0), 
	"TOTAL_PAGAR" NUMBER(16,0), 
	"VALOR_IMPUESTO" NUMBER(16,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE, 
	"SUB_TOTAL" NUMBER(16,0), 
	"VALOR_PROMOCION" NUMBER(16,0), 
	"COD_TIPO_PAGO" NUMBER(2,0), 
	"COD_FORMA_PAGO" NUMBER(2,0), 
	"COD_ESTADO" NUMBER(2,0), 
	"COD_USUARIO" NUMBER(14,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FACTURA_DETALLE
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" 
   (	"COD_FACTURA_DETALLE" NUMBER(16,0), 
	"VALOR_TOTAL" NUMBER(16,0), 
	"SUB_TOTAL" NUMBER(16,0), 
	"CANTIDAD" NUMBER(6,0), 
	"VALOR_IMPUESTO" NUMBER(16,0), 
	"VALOR_PROMOCION" NUMBER(16,0), 
	"VALOR_TARIFA" NUMBER(16,0), 
	"PORCENTAJE_IMPUESTO" NUMBER(2,0), 
	"COD_BENEFICIARIO_PROGRAMA" NUMBER(16,0), 
	"COD_FACTURA" NUMBER(16,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FILE
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FILE" 
   (	"COD_FILE" NUMBER(14,0), 
	"DES_FILE" VARCHAR2(400 BYTE), 
	"OBSERVACION" VARCHAR2(400 BYTE), 
	"RUTA" VARCHAR2(3000 BYTE), 
	"COD_TIPO_FILE" NUMBER(2,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FILE_AUDITORIA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" 
   (	"COD_FILE_AUDITORIA" NUMBER(16,0), 
	"COD_AFILIACION_AUDITORIA" NUMBER(14,0), 
	"COD_FILE" NUMBER(14,0), 
	"COD_PERSONA" NUMBER(14,0), 
	"DES_PERSISTENCIA" VARCHAR2(100 BYTE), 
	"DES_OBSERVACION_AUDI" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FILE_BENEFICIARIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" 
   (	"COD_FILE_BENEFICIARIO" NUMBER(16,0), 
	"COD_AFILIACION" NUMBER(14,0), 
	"COD_FILE" NUMBER(14,0), 
	"COD_BENEFICIARIO" NUMBER(16,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_FORMA_PAGO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_FORMA_PAGO" 
   (	"COD_FORMA_PAGO" NUMBER(2,0), 
	"DES_FORMA_PAGO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_IMPUESTO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_IMPUESTO" 
   (	"COD_IMPUESTO" NUMBER(2,0), 
	"DES_IMPUESTO" VARCHAR2(50 BYTE), 
	"VALOR" NUMBER(2,0), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_LOG_USUARIOS_SISTEMA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" 
   (	"COD_LOG_USUARIOS_SISTEMA" NUMBER(20,0), 
	"USUARIO" VARCHAR2(50 BYTE), 
	"FECHA" DATE DEFAULT SYSDATE, 
	"IP" VARCHAR2(30 BYTE), 
	"NAVEGADOR" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_MENU
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_MENU" 
   (	"COD_MENU" NUMBER(6,0), 
	"DES_MENU" VARCHAR2(100 BYTE), 
	"DES_MENU_LINK" VARCHAR2(100 BYTE), 
	"COD_PADRE" NUMBER(6,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_MODULO_ENCUESTA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" 
   (	"COD_MODULO" NUMBER, 
	"DES_MODULO" VARCHAR2(500 BYTE), 
	"COD_ESTADO" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_MONEDA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_MONEDA" 
   (	"COD_MONEDA" NUMBER(2,0), 
	"DES_MONEDA" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_MUNICIPIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_MUNICIPIO" 
   (	"COD_MUNICIPIO" NUMBER(6,0), 
	"COD_DEPARTAMENTO" NUMBER(6,0), 
	"DES_MUNICIPIO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PAIS
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PAIS" 
   (	"COD_PAIS" NUMBER(6,0), 
	"DES_PAIS" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"ABR_PAIS" VARCHAR2(4 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PARAMETRO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PARAMETRO" 
   (	"COD_PARAMETRO" NUMBER(2,0), 
	"DES_PARAMETRO" VARCHAR2(50 BYTE), 
	"VALOR_PARAMETRO" VARCHAR2(2000 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PARENTESCO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PARENTESCO" 
   (	"COD_PARENTESCO" NUMBER(2,0), 
	"DES_PARENTESCO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"ABR_PARENTESCO" VARCHAR2(2 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PERSONA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PERSONA" 
   (	"COD_PERSONA" NUMBER(14,0), 
	"COD_TIPO_IDENTIFICACION" NUMBER(2,0), 
	"NUMERO_IDENTIFICACION" NUMBER(14,0), 
	"NOMBRE_1" VARCHAR2(50 BYTE), 
	"NOMBRE_2" VARCHAR2(50 BYTE), 
	"APELLIDO_1" VARCHAR2(50 BYTE), 
	"APELLIDO_2" VARCHAR2(50 BYTE), 
	"FECHA_NACIMIENTO" DATE, 
	"TELEFONO" VARCHAR2(12 BYTE), 
	"EMAIL" VARCHAR2(200 BYTE), 
	"DIRECCION" VARCHAR2(200 BYTE), 
	"COD_SEXO" NUMBER(2,0), 
	"COD_MUNICIPIO" NUMBER(6,0), 
	"FECHA_CREACION" DATE DEFAULT SYSDATE, 
	"COD_ESTADO" NUMBER(2,0), 
	"CELULAR" VARCHAR2(12 BYTE), 
	"COD_EPS" NUMBER, 
	"COD_ESTADO_CIVIL" NUMBER, 
	"IND_TIENE_MASCOTA" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PERSONA_TIPOPER
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" 
   (	"COD_PERSONA_TIPOPER" NUMBER(14,0), 
	"COD_PERSONA" NUMBER(14,0), 
	"COD_TIPO_PERSONA" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PLAN
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PLAN" 
   (	"COD_PLAN" NUMBER(6,0), 
	"DES_PLAN" VARCHAR2(100 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PREGUNTA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PREGUNTA" 
   (	"COD_PREGUNTA" NUMBER(6,0), 
	"DES_PREGUNTA" VARCHAR2(4000 BYTE), 
	"COD_ENCUESTA" NUMBER(6,0), 
	"NUMERO_PREGUNTA" NUMBER(6,0), 
	"COD_MODULO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PRODUCTO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PRODUCTO" 
   (	"COD_PRODUCTO" NUMBER(6,0), 
	"DES_PRODUCTO" VARCHAR2(100 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"DESCRIPCION" VARCHAR2(4000 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_PROGRAMA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PROGRAMA" 
   (	"COD_PROGRAMA" NUMBER(6,0), 
	"DES_PROGRAMA" VARCHAR2(100 BYTE), 
	"COD_PRODUCTO" NUMBER(6,0), 
	"COD_ESTADO" NUMBER(2,0), 
	"COD_IMPUESTO" NUMBER(2,0), 
	"URL_CONTRATO" VARCHAR2(500 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

   COMMENT ON COLUMN "VDIRMP"."VDIR_PROGRAMA"."URL_CONTRATO" IS 'Url del contrato en pdf ';
--------------------------------------------------------
--  DDL for Table VDIR_PROGRAMA_FILE
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" 
   (	"COD_PROGRAMA_FILE" NUMBER(16,0), 
	"COD_FILE" NUMBER(14,0), 
	"COD_PROGRAMA" NUMBER(16,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_RESPUESTA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_RESPUESTA" 
   (	"COD_RESPUESTA" NUMBER(6,0), 
	"DES_RESPUESTA" VARCHAR2(4000 BYTE), 
	"PUNTUACION" NUMBER(3,0), 
	"COD_PREGUNTA" NUMBER(6,0), 
	"NUMERO_RESPUESTA" NUMBER(6,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_RESPUESTAS_MARCADAS
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" 
   (	"COD_RESPUESTAS_MARCADAS" NUMBER(16,0), 
	"COD_ENCUESTA_PERSONA" NUMBER(16,0), 
	"COD_RESPUESTA" NUMBER(6,0), 
	"VALOR_RESPUESTA" VARCHAR2(500 BYTE), 
	"COD_PREGUNTA" NUMBER(6,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ROL
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ROL" 
   (	"COD_ROL" NUMBER(2,0), 
	"DES_ROL" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_ROL_USUARIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_ROL_USUARIO" 
   (	"COD_ROL_USUARIO" NUMBER(6,0), 
	"COD_USUARIO" NUMBER(14,0), 
	"COD_ROL" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_SEGURO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_SEGURO" 
   (	"COD_SEGURO" NUMBER(2,0), 
	"DES_SEGURO" VARCHAR2(50 BYTE), 
	"COD_PROGRAMA" NUMBER(2,0), 
	"VALOR" NUMBER(14,0), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_SEXO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_SEXO" 
   (	"COD_SEXO" NUMBER(2,0), 
	"DES_SEXO" VARCHAR2(10 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"DES_ABR" VARCHAR2(10 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TARIFA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TARIFA" 
   (	"COD_TARIFA" NUMBER(14,0), 
	"COD_PROGRAMA" NUMBER(6,0), 
	"COD_PLAN" NUMBER(6,0), 
	"VALOR" NUMBER(16,0), 
	"COD_ESTADO" NUMBER(2,0), 
	"COD_IMPUESTO" NUMBER(2,0), 
	"COD_PRODUCTO" NUMBER(6,0), 
	"COD_TIPO_TARIFA" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_FILE
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_FILE" 
   (	"COD_TIPO_FILE" NUMBER(2,0), 
	"DES_TIPO_FILE" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_IDENTIFICACION
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" 
   (	"COD_TIPO_IDENTIFICACION" NUMBER(2,0), 
	"DES_TIPO_IDENTIFICACION" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0), 
	"DES_ABR" VARCHAR2(10 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_PAGO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_PAGO" 
   (	"COD_TIPO_PAGO" NUMBER(2,0), 
	"DES_TIPO_PAGO" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_PERSONA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_PERSONA" 
   (	"COD_TIPO_PERSONA" NUMBER(2,0), 
	"DES_TIPO_PERSONA" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_SOLICITUD
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" 
   (	"COD_TIPO_SOLICITUD" NUMBER(2,0), 
	"DES_TIPO_SOLICITUD" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_TARIFA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_TARIFA" 
   (	"COD_TIPO_TARIFA" NUMBER(2,0), 
	"DES_TIPO_TARIFA" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_TIPO_VIA
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_TIPO_VIA" 
   (	"COD_TIPO_VIA" NUMBER, 
	"DES_TIPO_VIA" VARCHAR2(50 BYTE), 
	"COD_ESTADO" NUMBER, 
	"ABR_TIPO_VIA" VARCHAR2(4 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VDIR_USUARIO
--------------------------------------------------------

  CREATE TABLE "VDIRMP"."VDIR_USUARIO" 
   (	"COD_USUARIO" NUMBER(14,0), 
	"LOGIN" VARCHAR2(50 BYTE), 
	"CLAVE" VARCHAR2(100 BYTE), 
	"COD_PERSONA" NUMBER(14,0), 
	"COD_ESTADO" NUMBER(2,0), 
	"CODIGO_SEGURIDAD" NUMBER(6,0), 
	"COD_PLAN" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into VDIRMP."BIN$uPY5smBzT5CXhVfOPrsBMw==$0"
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_AFILIACION
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_AFILIACION_AUDITORIA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_BARRIO
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_BENEFICIARIO_PROGRAMA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_COMUNA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_CONTRATANTE_BENEFICIARIO
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_DEPARTAMENTO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_DEPARTAMENTO (COD_DEPARTAMENTO,COD_PAIS,DES_DEPARTAMENTO,COD_ESTADO) values ('1','36','Valle','1');
Insert into VDIRMP.VDIR_DEPARTAMENTO (COD_DEPARTAMENTO,COD_PAIS,DES_DEPARTAMENTO,COD_ESTADO) values ('2','36','Cauca','1');
REM INSERTING into VDIRMP.VDIR_ENCUESTA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ENCUESTA (COD_ENCUESTA,DES_ENCUESTA,OBSERVACION) values ('1','Sarlaf','Encuesta de sarlaf');
Insert into VDIRMP.VDIR_ENCUESTA (COD_ENCUESTA,DES_ENCUESTA,OBSERVACION) values ('2','Estado de salud','Encuesta para saber el estado de salud');
REM INSERTING into VDIRMP.VDIR_ENCUESTA_PERSONA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ENCUESTA_PERSONA (COD_ENCUESTA_PERSONA,COD_AFILIACION,COD_ENCUESTA,FECHA_CREACION,COD_PERSONA) values ('53','1','1',to_date('14/12/18','DD/MM/RR'),null);
Insert into VDIRMP.VDIR_ENCUESTA_PERSONA (COD_ENCUESTA_PERSONA,COD_AFILIACION,COD_ENCUESTA,FECHA_CREACION,COD_PERSONA) values ('54','2','1',to_date('14/12/18','DD/MM/RR'),null);
REM INSERTING into VDIRMP.VDIR_EPS
SET DEFINE OFF;
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('43','S.O.S SALUD','1','ENTIDAD PROMOTORA DE SALUD SERVICIO OCCIDENTAL DE SALUD S.A. S.O.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('44','CRUZ BLANCA','1','CRUZ BLANCA ENTIDAD PROMOTORA DE SALUD S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('46','NUEVA EPS','1','NUEVA EPS S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('47','GOLDEN GROUP','1','GOLDEN GROUP S.A. ENTIDAD PROMOTORA DE');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('49','UNIVALLE SALUD','1','UNIVERSIDAD DEL VALLE SERVICIO DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('50','UNINACIONAL SALUD','1','UNIDAD DE SERVICIOS DE SALUD UNISALUD DE LA UNIVERSIDAD NACIONAL DE COLOMBIA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('51','UNICAUCA SALUD','1','UNIVERSIDAD DEL CAUCA UNIDAD DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('57','SANIDAD POLICIA NACIONAL','1','DIRECCION DE SANIDAD POLICIA NACIONAL');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('58','ECOPETROL','1','ECOPETROL S.A');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('61','SALUDCOOP','1','SALUDCOOP EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('62','UNIATLANTICO','1','UNIDAD DE SALUD DE LA UNIVERSIDAD DEL ATLANTICO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('63','SALUD VIDA','1','SALUD VIDA S.A. ENTIDAD PROMOTORA DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('68','AIC CM','1','ASOCIACI√ìN IND√çGENA DEL CAUCA - AIC -CM');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('73','SANA','1','BARRANQUILLA SANA E.P.S');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('74','BONSALUD','1','BONSALUD S.A. E.P.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('79','CAJANAL','1','CAJANAL E.P.S');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('80','CALISALUD','1','CALISALUD E.P.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('85','CJ.PREV.DE NTE./STANDER','1','CJ.DPTAL.PREV.DE NTE./STANDER');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('86','CJ.PREV.SUPERINTEND.BANCARIA','1','CJ.PR.SOC.SUPERINTEND.BANCARIA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('88','CJ.PREV.SOC.ARAUCA','1','CJ.PREV.SOC.ARAUCA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('89','CJ.PREV.SOC.DE BOYACA','1','CJ.PREV.SOC.DE BOYACA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('90','CJ.PREV.SOC.DEPTAL DEL CAUCA','1','CJ.PREV.SOC.DEPTAL DEL CAUCA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('92','CJ.PREV.SOC.MUN.DE IBAGUE','1','CJ.PREV.SOC.MUN.DE IBAGUE');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('93','CJ.PREV.SOC.NARI√ëO','1','CJ.PREV.SOC.NARI√ëO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('94','CJ.PREV.SOC.SANTIAGO DE CALI','1','CJ.PREV.SOC.SANTIAGO DE CALI');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('95','CJ.PREV.SOC.U.I.SANTANDER','1','CJ.PREV.SOC.U.I.SANTANDER');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('96','CJ.PREV.SOC.UNIV.DEL CAUCA','1','CJ.PREV.SOC.UNIV.DEL CAUCA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('97','CJ.PREV.SOC.UNIVERS.NACIONAL','1','CJ.PREV.SOC.UNIVERS.NACIONAL');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('100','COLSEGUROS','1','COLSEGUROS E.P.S');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('101','COMCAJA','1','COMCAJA C.COMP.FLIAR CAMPESINA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('102','COMFAMILIAR','1','COMFAMILIAR CAMACOL CAJA COMPE');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('105','CONGRESO','1','CONGRESO DE LA REPUBLICA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('106','CONSALUD','1','CONSALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('108','COOMEVA','1','COOMEVA EPS. SA (PAGO N.Y)');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('111','CORP.ELECTR.COSTA ATLANTICA','1','CORP.ELECTR.COSTA ATLANTICA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('112','CORPORANONIMAS','1','CORPORANONIMAS E.P.S');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('114','DEPTO.MEDICO Y ODONTOLOGICO','1','DEPTO.MEDICO Y ODONTOLOGICO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('115','CONDOR','1','E.P.S CONDOR S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('117','COMFENALCO','1','E.P.S. COMFENALCO ANTIOQUIA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('119','EPS RISARALDA','1','E.P.S. RISARALDA LTDA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('126','EMPRESAS PUB MEDELLIN','1','EPM - EMPRESAS PUBLICAS DE MEDELLIN');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('127','EPS ARUBA','1','EPS ARUBA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('129','SURAMERICANA','1','SURAMERICANA S.A. EPS Y MP');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('130','FONDO SALUD UNICORDOBA','1','FONDO DE SALUD UNIV. CORDOBA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('131','FONDO FERROCARRILES','1','FONDO FERROCARRILES NACIONALES');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('132','FUERZAS ARMADAS','1','FUERZAS ARMADAS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('134','HUMANA','1','HUMANA VIVIR S.A. E.P.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('135','ISS EPS','1','I.S.S. E.P.S. S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('136','IND LICORERA','1','IND.LICORERA CALDAS SER.MEDICO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('137','INCORA','1','INST.CLMBNO.REFORMA AGRARIA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('139','MAGISTERIO','1','MAGISTERIO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('140','MEDICOL','1','MEDICOL SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('141','METROPOLITANA','1','METROPOLITANA DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('142','MULTIMEDICAS','1','MULTIMEDICAS SALUD EPS S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('144','RED SALUD','1','RED SALUD ATENCION HUMANA EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('145','RESIDENTE EN EL EXTERIOR','1','RESIDENTE EN EL EXTERIOR');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('146','COLPATRIA','1','SALUD COLPATRIA E.P.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('148','SALUDCOLOMBIA','1','SALUDCOLOMBIA ENTIDAD PROM.SAL');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('151','SAVIA','1','SAVIA SALUD EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('152','SELVA','1','SELVA SALUD S.A E.P.S');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('4','COMFACOR CORDOBA','1','COMFACOR EPS-CCF DE C√ìRDOBA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('11','CAJACOPI ATLANTIO','1','CAJACOPI ATL√ÅNTICO ‚ÄîCCF');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('13','COMFACHOCO','1','COMFACHOCO-CCF DEL CHOC√ì');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('14','CAPRECOM','1','CAJA DE PREVISI√ìN SOCIAL DE COMUNICACIONES EPS CAPRECOM');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('15','CONVIDA','1','ENTIDAD ADMINISTRADORA DE R√âGIMEN SUBSIDIADO CONVIDA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('16','CAPRESOCA','1','CAPRESOCA EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('18','CABILDO ZENU','1','ASOCIACI√ìN DE CABILDOS IND√çGENAS DEL RESGUARDO IND√çGENA ZEN√ö DE SAN AN');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('21','MALLAMAS EPSI','1','ENTIDAD PROMOTORA DE SALUD MALLAMAS EPSI');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('23','CAFESALUD','1','CAFESALUD EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('24','SALUD VIDA','1','SALUD VIDA EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('25','CAPITAL SALUD','1','CAPITAL SALUD EPSS S.A.S.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('26','EMDISAL','1','EMPRESA MUTUAL PARA EL DESARROLLO INTEGRAL DE LA SALUD E.S.S. "EMDISAL');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('27','COOSALUD','1','COOSALUD E.S.S. COOPERATIVA DE SALUD Y DESARROLLO INTEGRAL DE LA ZONA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('28','ASMED SALUD','1','ASOCIACI√ìN MUTUAL LA ESPERANZA "ASMET SALUD"');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('29','AMBUQ','1','ASOCIACI√ìN MUTUAL BARRIOS UNIDOS DE QUIBD√ì E.S.S. "AMBUQ"');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('31','EMSSANAR','1','ASOCIACI√ìN MUTUAL EMPRESA SOLIDARIA DE SALUD DE NARI√ëO ESS "EMSSANAR E"');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('32','COMPARTA','1','COOPERATIVA DE SALUD COMUNITARIA "COMPARTA"');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('33','MUTUAL SER','1','ASOCIACI√ìN MUTUAL SER EMPRESA SOLIDARIA DE SALUD ESS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('34','ALIANSALUD','1','ALIANSALUD ENTIDAD PROMOTORA DE SALUD S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('35','SALUD TOTAL','1','SALUD TOTAL S.A. ENTIDAD PROMOTORA DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('37','SANITAS','1','ENTIDAD PROMOTORA DE SALUD SANITAS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('38','COMPENSAR','1','COMPENSAR ENTIDAD PROMOTORA DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('40','COMFENALCO','1','COMFENALCO VALLE EPS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('41','COOMEVA','1','COOMEVA EPS. S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('42','FAMISANAR','1','EPS FAMISANAR LTDA.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('153','SENA','1','SENA SERVICIO MEDICO ASISTENCI');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('154','SER.CORP.AUTONOMA RGNAL VALLE','1','SER.CORP.AUTONOMA RGNAL VALLE');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('155','SERV.MED.UNIVERS.DE CALDAS','1','SERV.MED.UNIVERS.DE CALDAS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('157','SOCIAL SECURITY','1','SOCIAL SECURITY');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('158','SOLSALUD','1','SOLSALUD E.P.S. S.A.');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('160','UNIMEC','1','UNIMEC E.P.S S.A');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('161','UNIANTIOQUIA','1','UNIVERSIDAD DE ANTIOQUIA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('162','EPS PIJAO SALUD EPSI¬†¬†¬†¬†¬†¬†¬†¬†¬†','1','EPS PIJAO SALUD EPSI¬†¬†¬†¬†¬†¬†¬†¬†¬†');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('164','EAS CALI','1','EAS MUNICIPIO DE CALI');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('166','EPS MEDIMAS','1','EPS MEDIMAS');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('167','EPS MEDIMAS SUBSIDIADO','1','EPS MEDIMAS SUBSIDIADO');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('168','UT SERVISALUD SAN JOSE','1','UT SERVISALUD SAN JOSE');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('169','CAJA PREV. S. UNIV. CARTAGENA','1','CAJA PREV. S. UNIV. CARTAGENA');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('170','ECOOPSOS EPS SAS','1','ECOOPSOS - EMPRESA PROMOTORA DE SALUD');
Insert into VDIRMP.VDIR_EPS (COD_EPS,DES_EPS,COD_ESTADO,SIGLA_EPS) values ('171','PROINSALUD S.A.','1','PROINSALUD S.A. - PROFESIONALES DE LA SALUD');
REM INSERTING into VDIRMP.VDIR_ESTADO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ESTADO (COD_ESTADO,DES_ESTADO) values ('1','Activo');
Insert into VDIRMP.VDIR_ESTADO (COD_ESTADO,DES_ESTADO) values ('2','Inactivo');
REM INSERTING into VDIRMP.VDIR_ESTADO_CIVIL
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ESTADO_CIVIL (COD_ESTADO_CIVIL,DES_ESTADO_CIVIL,COD_ESTADO,ABR_ESTADO_CIVIL) values ('1','CASADO','1','C');
Insert into VDIRMP.VDIR_ESTADO_CIVIL (COD_ESTADO_CIVIL,DES_ESTADO_CIVIL,COD_ESTADO,ABR_ESTADO_CIVIL) values ('2','DIVORCIADO/SEPARADO','1','D');
Insert into VDIRMP.VDIR_ESTADO_CIVIL (COD_ESTADO_CIVIL,DES_ESTADO_CIVIL,COD_ESTADO,ABR_ESTADO_CIVIL) values ('3','UNI√ìN LIBRE','1','O');
Insert into VDIRMP.VDIR_ESTADO_CIVIL (COD_ESTADO_CIVIL,DES_ESTADO_CIVIL,COD_ESTADO,ABR_ESTADO_CIVIL) values ('4','SOLTERO','1','S');
Insert into VDIRMP.VDIR_ESTADO_CIVIL (COD_ESTADO_CIVIL,DES_ESTADO_CIVIL,COD_ESTADO,ABR_ESTADO_CIVIL) values ('5','VIUDO','1','V');
REM INSERTING into VDIRMP.VDIR_FACTURA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_FACTURA_DETALLE
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_FILE
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_FILE_AUDITORIA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_FILE_BENEFICIARIO
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_FORMA_PAGO
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_IMPUESTO
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_LOG_USUARIOS_SISTEMA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_MENU
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_MODULO_ENCUESTA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_MODULO_ENCUESTA (COD_MODULO,DES_MODULO,COD_ESTADO) values ('4','Declaraci√≥n de origen de bienes y/o fondos.','1');
Insert into VDIRMP.VDIR_MODULO_ENCUESTA (COD_MODULO,DES_MODULO,COD_ESTADO) values ('1','Informaci√≥n financiera contratante','1');
Insert into VDIRMP.VDIR_MODULO_ENCUESTA (COD_MODULO,DES_MODULO,COD_ESTADO) values ('2','Operaciones en moneda extranjera','1');
Insert into VDIRMP.VDIR_MODULO_ENCUESTA (COD_MODULO,DES_MODULO,COD_ESTADO) values ('3','Identificaci√≥n de Persona Expuesta Politicamente (PEP)','1');
REM INSERTING into VDIRMP.VDIR_MONEDA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_MONEDA (COD_MONEDA,DES_MONEDA,COD_ESTADO) values ('1','$ Peso','1');
Insert into VDIRMP.VDIR_MONEDA (COD_MONEDA,DES_MONEDA,COD_ESTADO) values ('2','$ D√≥lar','1');
Insert into VDIRMP.VDIR_MONEDA (COD_MONEDA,DES_MONEDA,COD_ESTADO) values ('3','‚Ç¨ Euro','1');
REM INSERTING into VDIRMP.VDIR_MUNICIPIO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_MUNICIPIO (COD_MUNICIPIO,COD_DEPARTAMENTO,DES_MUNICIPIO,COD_ESTADO) values ('1','1','Cali','1');
Insert into VDIRMP.VDIR_MUNICIPIO (COD_MUNICIPIO,COD_DEPARTAMENTO,DES_MUNICIPIO,COD_ESTADO) values ('2','2','Popayan','1');
REM INSERTING into VDIRMP.VDIR_PAIS
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('1','ANDORRANO/A','1','AD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('2','AFGANO/A','1','AF');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('3','ANTIGUANO/A','1','AG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('4','ALBANO/A','1','AL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('5','ARMENIO/A','1','AM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('6','ANGOLANO/A','1','AO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('7','ARGENTINO/A','1','AR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('8','AUSTRIACO/A','1','AT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('9','AUSTRALIANO/A','1','AU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('10','AZERBAIYANO/A','1','AZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('11','BOSNIO/A','1','BA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('12','BARBADENSE','1','BB');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('13','BANGLADES√ç','1','BD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('14','BELGA','1','BE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('15','BURKIN√âS/A','1','BF');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('16','B√öLGARO/A','1','BG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('17','BAREIN√ç','1','BH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('18','BURUND√âS/A','1','BI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('19','BENIN√âS/A','1','BJ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('20','BRUNEANO/A','1','BN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('21','BOLIVIANO/A','1','BO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('22','BRASILE√ëO/A','1','BR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('23','BAHAME√ëO/A','1','BS');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('24','BOTSUANO/A','1','BW');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('25','BIELORUSO/A','1','BY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('26','BELICE√ëO/A','1','BZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('27','CANADIENSE','1','CA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('28','CONGOLE√ëO/A','1','CD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('29','CENTROAFRICANO/A','1','CF');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('30','CONGOLE√ëO/A','1','CG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('31','SUIZO/A','1','CH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('32','MARFILE√ëO/A','1','CI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('33','CHILENO/A','1','CL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('34','CAMERUN√âS/A','1','CM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('35','CHINO/A','1','CN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('36','COLOMBIANO/A','1','CO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('37','COSTARRICENSE','1','CR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('38','CUBANO/A','1','CU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('39','CABOVERDIANO/A','1','CV');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('40','CHIPRIOTA','1','CY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('41','CHECO/A','1','CZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('42','ALEM√ÅN/A','1','DE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('43','DAN√âS/A','1','DK');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('44','DOMINIQU√âS/A','1','DM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('45','DOMINICANO/A','1','DO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('46','ARGELINO/A','1','DZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('47','ECUATORIANO/A','1','EC');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('48','ESTONIO/A','1','EE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('49','EGIPCIO/A','1','EG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('50','ERITREO/A','1','ER');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('51','ESPA√ëOL/A','1','ES');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('52','ET√çOPE','1','ET');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('53','FINLAND√âS/A','1','FI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('54','FRANC√âS/A','1','FR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('55','GABON√âS/A','1','GA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('56','BRIT√ÅNICO/A','1','GB');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('57','GRANADINO/A','1','GD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('58','GEORGIANO/A','1','GE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('59','GUAYAN√âS/A','1','GF');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('60','GHAN√âS/A','1','GH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('61','GROENLAND√âS/A','1','GL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('62','GAMBIANO/A','1','GM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('63','GUINEANO/A','1','GN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('64','GUINEANO/A','1','GQ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('65','GRIEGO/A','1','GR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('66','GUATEMALTECO/A','1','GT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('67','GUINEANO/A','1','GW');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('68','HONDURE√ëO/A','1','HN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('69','CROATA','1','HR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('70','HAITIANO/A','1','HT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('71','H√öNGARO/A','1','HU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('72','INDIONISIO/A','1','ID');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('73','IRLAND√âS/A','1','IE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('74','ISRAEL√ç','1','IL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('75','INDIO/A','1','IN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('76','IRAQU√ç','1','IQ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('77','IRAN√ç','1','IR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('78','ISLAND√âS/A','1','IS');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('79','ITALIANO/A','1','IT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('80','JAMAICANO/A','1','JM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('81','JORDANO/A','1','JO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('82','JAPON√âS/A','1','JP');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('83','KENIATA','1','KE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('84','KIRGU√çS/A','1','KG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('85','CAMBOYANO/A','1','KH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('86','KIRIBATIANO/A','1','KI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('87','COMORENSE','1','KM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('88','NORCOREANO/A','1','KP');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('89','SURCOREANO/A','1','KR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('90','KUWAIT√ç','1','KW');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('91','KAZAJO/A','1','KZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('92','LAOSIANO/A','1','LA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('93','LIBAN√âS/A','1','LB');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('94','LIECHTENSTEINIANO/A','1','LI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('95','CEILAND√âS/A','1','LK');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('96','LIBERIANO/A','1','LR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('97','LESOTENSE','1','LS');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('98','LITUANO/A','1','LT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('99','LUXEMBURG√âS/A','1','LU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('100','LETONIO/A','1','LV');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('101','LIBIO/A','1','LY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('102','MARROQU√ç','1','MA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('103','MONAQU√âS/A','1','MC');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('104','MOLDAVO/A','1','MD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('105','MONTENEGRINO/A','1','ME');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('106','MALGACHE','1','MG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('107','MARSHAL√âS/A','1','MH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('108','MACEDONIO/A','1','MK');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('109','MALIENSE','1','ML');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('110','BIRMANO/A','1','MM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('111','MONG√ìL/A','1','MN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('112','MAURITANO/A','1','MR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('113','MALT√âS/A','1','MT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('114','MAURICIANO/A','1','MU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('115','MALDIVO/A','1','MV');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('116','MALAU√ç','1','MW');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('117','MEXICANO/A','1','MX');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('118','MALAYO/A','1','MY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('119','MOZAMBIQUE√ëO/A','1','MZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('120','NAMIBIO/A','1','NA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('121','NIGERIANO/A','1','NE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('122','NICARAGUENSE','1','NI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('123','HOLAND√âS/A','1','NL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('124','NORUEGO/A','1','NO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('125','NAURUANO/A','1','NR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('126','NIUANO/A','1','NU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('127','NEOZELAND√âS/A','1','NZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('128','OMAN√âS/A','1','OM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('129','PANAME√ëO/A','1','PA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('130','PERUANO/A','1','PE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('131','PAP√ö','1','PG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('132','FILIPINO/A','1','PH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('133','PAKISTAN√ç','1','PK');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('134','POLACO/A','1','PL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('135','PORTUGU√âS/A','1','PT');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('136','PARAGUAYO/A','1','PY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('137','CATAR√ç','1','QA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('138','RUMANO/A','1','RO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('139','SERBIO/A','1','RS');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('140','RUSO/A','1','RU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('141','RUAND√âS/A','1','RW');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('142','SAUD√ç','1','SA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('143','SALOMONENSE','1','SB');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('144','SEYCHELENSE','1','SC');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('145','SUDAN√âS/A','1','SD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('146','SUECO/A','1','SE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('147','SINGAPURENSE','1','SG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('148','ESLOVENO/A','1','SI');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('149','ESLOVACO/A','1','SK');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('150','SIERRALEON√âS/A','1','SL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('151','SANMARINENSE','1','SM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('152','SENEGAL√âS/A','1','SN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('153','SOMAL√ç','1','SO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('154','SURINAM√âS/A','1','SR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('155','SALVADORE√ëO/A','1','SV');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('156','SIRIO/A','1','SY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('157','SUAZI','1','SZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('158','CHADIANO/A','1','TD');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('159','TOGOL√âS/A','1','TG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('160','TAILAND√âS/A','1','TH');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('161','TIMORENSE','1','TL');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('162','TUNECINO/A','1','TN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('163','TONGANO/A','1','TO');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('164','TURCO/A','1','TR');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('165','TUVALUANO/A','1','TV');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('166','TANZANO/A','1','TZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('167','UCRANIANO/A','1','UA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('168','UGAND√âS/A','1','UG');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('169','AMERICANO/A','1','US');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('170','URUGUAYO/A','1','UY');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('171','UZBECO/A','1','UZ');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('172','VATICANO/A','1','VA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('173','SANVICENTINO/A','1','VC');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('174','VENEZOLANO/A','1','VE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('175','VIETNAMITA','1','VN');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('176','VANUATUENSE','1','VU');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('177','SAMOANO/A','1','WS');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('178','YEMEN√ç','1','YE');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('179','SUDAFRICANO/A','1','ZA');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('180','ZAMBIANO/A','1','ZM');
Insert into VDIRMP.VDIR_PAIS (COD_PAIS,DES_PAIS,COD_ESTADO,ABR_PAIS) values ('181','ZIMBABUENSE','1','ZW');
REM INSERTING into VDIRMP.VDIR_PARAMETRO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PARAMETRO (COD_PARAMETRO,DES_PARAMETRO,VALOR_PARAMETRO,COD_ESTADO) values ('1','url para traer usuarios asociados','http://oficinavirtualmp.coomeva.com.co/saludmp-ws/jax-rs/saludmp-credenciales/CredencialesAfilmed/COREMP/CORE3302MP','1');
Insert into VDIRMP.VDIR_PARAMETRO (COD_PARAMETRO,DES_PARAMETRO,VALOR_PARAMETRO,COD_ESTADO) values ('2','Correo remitente coomeva','coomeva@hotmail.com','1');
Insert into VDIRMP.VDIR_PARAMETRO (COD_PARAMETRO,DES_PARAMETRO,VALOR_PARAMETRO,COD_ESTADO) values ('3','url base ','http://localhost/venta_directa/','1');
REM INSERTING into VDIRMP.VDIR_PARENTESCO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('1','Bebe Gestante','1','0');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('2','Bebe Nacido sin Ident','1','1');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('3','Bebe Hijo','1','2');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('4','Bebe Progenitor','1','3');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('5','Bebe Hermano','1','4');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('6','Bebe nieto','1','5');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('7','Bebe Familiar a Cargo','1','6');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('8','Bebe Titular','1','7');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('9','BEBE CONYUGE','1','8');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('10','Abuelo','1','A');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('11','Conyuge','1','C');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('12','Fliar a cargo','1','F');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('13','Hijo','1','H');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('14','Hermano(a)','1','M');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('15','Nieto','1','N');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('16','Tio','1','O');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('17','Progenitor(a)','1','P');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('18','Suegro(a)','1','S');
Insert into VDIRMP.VDIR_PARENTESCO (COD_PARENTESCO,DES_PARENTESCO,COD_ESTADO,ABR_PARENTESCO) values ('19','Titular','1','T');
REM INSERTING into VDIRMP.VDIR_PERSONA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PERSONA (COD_PERSONA,COD_TIPO_IDENTIFICACION,NUMERO_IDENTIFICACION,NOMBRE_1,NOMBRE_2,APELLIDO_1,APELLIDO_2,FECHA_NACIMIENTO,TELEFONO,EMAIL,DIRECCION,COD_SEXO,COD_MUNICIPIO,FECHA_CREACION,COD_ESTADO,CELULAR,COD_EPS,COD_ESTADO_CIVIL,IND_TIENE_MASCOTA) values ('12','1','698574','felipe',null,'angulo',null,to_date('31/10/18','DD/MM/RR'),null,'hidalgoever@live.com',null,'1',null,to_date('29/11/18','DD/MM/RR'),'1','5424',null,null,null);
Insert into VDIRMP.VDIR_PERSONA (COD_PERSONA,COD_TIPO_IDENTIFICACION,NUMERO_IDENTIFICACION,NOMBRE_1,NOMBRE_2,APELLIDO_1,APELLIDO_2,FECHA_NACIMIENTO,TELEFONO,EMAIL,DIRECCION,COD_SEXO,COD_MUNICIPIO,FECHA_CREACION,COD_ESTADO,CELULAR,COD_EPS,COD_ESTADO_CIVIL,IND_TIENE_MASCOTA) values ('21','1','1059900122','diego',null,'castillo',null,to_date('04/12/18','DD/MM/RR'),'12545','hidalgoever@live.com',null,'2',null,to_date('20/12/18','DD/MM/RR'),'1','3215485693',null,null,null);
REM INSERTING into VDIRMP.VDIR_PERSONA_TIPOPER
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PERSONA_TIPOPER (COD_PERSONA_TIPOPER,COD_PERSONA,COD_TIPO_PERSONA) values ('2','12','2');
Insert into VDIRMP.VDIR_PERSONA_TIPOPER (COD_PERSONA_TIPOPER,COD_PERSONA,COD_TIPO_PERSONA) values ('21','21','1');
REM INSERTING into VDIRMP.VDIR_PLAN
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PLAN (COD_PLAN,DES_PLAN,COD_ESTADO) values ('1','Asociado','1');
Insert into VDIRMP.VDIR_PLAN (COD_PLAN,DES_PLAN,COD_ESTADO) values ('2','Familiar','1');
REM INSERTING into VDIRMP.VDIR_PREGUNTA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('38','En cumplimiento a lo se√±alado en la circular externa 009 de 2016 (Superintendencia Nacional de Salud). Ley 1474 de 2011 (Estatuto Anticorrupci√≥n) y dem√°s normas legales concordantes. Afirmo que todas mis
actividades las ejerzo dentro de las normas legales y declaro que los recursos que poseo provienen de las siguientes fuentes: (detalle ocupaci√≥n, oficio, actividad, negocio, etc.)','1','28','4');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('34','¬øPosee cuentas corrientes en moneda extrangera?','1','8','2');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('35','¬øEs una persona expuesta pol√≠ticamente de acuerdo al decreto 1674 de 2016?(&)','1','1','3');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('36','¬øRepresenta legalmente alguna organizaci√≥n
internacional (ONG - OIG)?','1','2','3');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('37','¬øExiste alg√∫n v√≠nculo entre usted y alguna persona expuesta pol√≠ticamente?(&&)
','1','27','3');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('1','Ingresos mensuales actividad principal','1','1','1');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('2','Egresos mensuales actividad principal','1','2','1');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('3','Otros ingresos diferentes a la actividad principal
  ','1','3','1');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('4','Valor activos o posesiones','1','4','1');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('5','Valor pasivos o deudas','1','5','1');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('6','Usted realiza transacciones en moneda extranjera','1','6','2');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('7','Seleccione el tipo de transacciones que realiza','1','7','2');
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('8','¬øHa tenido embarazos normales, quir√∫rgicos o abortos, trastornos de los senos, matriz u ovarios?','2','1',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('9','¬øEst√° actualmente embarazada?','2','2',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('10','¬øCu√°ntos meses?','2','3',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('11','¬øConvulsiones, ataques, p√©rdida de conocimiento, desmayos, trombosis cerebral, hemorragia, epilepsia o cualquier afecci√≥n neurol√≥gica?','2','4',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('12','¬øFracturas, artritis, reumatismo, trastornos articulares, enfermedades de la columna, de piel o alergias? ','2','5',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('13','¬øDiabetes, trastornos de la gl√°ndula tiroides, az√∫car en la sangre o en la orina?','2','6',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('14','¬øUlcera g√°strica o duodenal, gastritis, agrieras (reflujo gastroesof√°gico), colitis, hemorroides, c√≥licos biliares, enfermedades del h√≠gado?','2','7',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('15','¬øAsma, tuberculosis, dificultad para respirar, enfermedades del pulm√≥n?','2','8',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('16','¬øTensi√≥n arterial alta, enfermedades del coraz√≥n, angina de pecho, enfermedades de arterias o venas?','2','9',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('17','¬øAnemia, linfomas, ganglios inflamados, enfermedades renales, de la pr√≥stata, de la vejiga, o venereas?','2','10',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('18','¬øMalformaciones, deformaciones, imperfecciones o anomal√≠as cong√©nitas o adquiridas?','2','11',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('19','¬øV√°rices, hinchaz√≥n o ulceras en las piernas?','2','12',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('20','¬øEnfermedades psiqui√°tricas o trastornos psicol√≥gicos?','2','13',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('21','¬øAccidentes, traumatismos, infecciones o riesgos de padecer enfermedades transmisibles?','2','14',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('22','¬øHa estado alguna vez hospitalizado(a) o le han practicado cirug√≠as o transfusiones?','2','15',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('23','¬øHa consultado alg√∫n m√©dico en el √∫ltimo a√±o?','2','16',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('24','¬øLe han practicado alg√∫n examen de laboratorio cl√≠nico, radiol√≥gico o alg√∫n otro examen de diagn√≥stico en los √∫ltimos seis (6) meses?','2','17',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('25','¬øPiensa someterse o tiene pendiente alg√∫n tratamiento m√©dico o quir√∫rgico?','2','18',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('26','¬øLe han diagnosticado en alguna √©poca de su vida tumores benignos o c√°ncer, ha tenido masas palpables?','2','19',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('27','¬øPractica deporte de alto riesgo?','2','20',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('28','¬øPadece o ha padecido alguna enfermedad que no aparezca registrada en el presente cuestionario?','2','21',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('29','¬øLo han vacunado de acuerdo al esquema de vacunaci√≥n del PAI?','2','22',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('30','¬øAl nacer su hijo requiri√≥ de oxigeno e incubadora?','2','23',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('31','¬øCu√°l es su talla?','2','24',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('32','¬øCu√°l es su peso? ','2','25',null);
Insert into VDIRMP.VDIR_PREGUNTA (COD_PREGUNTA,DES_PREGUNTA,COD_ENCUESTA,NUMERO_PREGUNTA,COD_MODULO) values ('33','¬øEnfermedades de los ojos, pterigios, estrabismo, defectos de refracci√≥n visual, cataratas, enfermedades del o√≠do, v√©rtigo, enfermedades de la garganta?','2','26',null);
REM INSERTING into VDIRMP.VDIR_PRODUCTO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PRODUCTO (COD_PRODUCTO,DES_PRODUCTO,COD_ESTADO,DESCRIPCION) values ('2','SAO','1','SAO');
Insert into VDIRMP.VDIR_PRODUCTO (COD_PRODUCTO,DES_PRODUCTO,COD_ESTADO,DESCRIPCION) values ('1','MI','1','MI');
Insert into VDIRMP.VDIR_PRODUCTO (COD_PRODUCTO,DES_PRODUCTO,COD_ESTADO,DESCRIPCION) values ('3','CEM','1','CEM');
REM INSERTING into VDIRMP.VDIR_PROGRAMA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('2','Dental Elite','2','1',null,null);
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('3','Oro plus','1','1',null,null);
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('1','Cem','3','1',null,null);
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('4','Plata joven','1','1',null,null);
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('5','Tradicional especial','1','1',null,null);
Insert into VDIRMP.VDIR_PROGRAMA (COD_PROGRAMA,DES_PROGRAMA,COD_PRODUCTO,COD_ESTADO,COD_IMPUESTO,URL_CONTRATO) values ('6','Asociado','1','1',null,null);
REM INSERTING into VDIRMP.VDIR_PROGRAMA_FILE
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_RESPUESTA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('51','<input type="text" id="declaro" name="declaro" class="form-control campo-vd"  maxlength="400">',null,'38','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('27','<label>Detalle el concepto de otros Ingresos diferentes a la Actiividad Principal</label> <input type="text" id="concept" name="concept" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled>',null,'3','7');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('11','N/A',null,'3','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('28','SI',null,'34','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('29','NO',null,'34','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('30','<label>Nombre del banco</label> <input type="text" id="nom_banco" name="nom_banco" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled >',null,'34','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('31','<label>Ciudad</label> <input type="text" id="ciudad" name="ciudad" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled>',null,'34','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('32','<label>Pa&iacute;s</label> <input type="text" id="pais" name="pais" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled >',null,'34','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('33','<label>Moneda</label>',null,'34','6');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('34','SI',null,'35','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('35','NO',null,'35','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('36','<label>Cargo</label> <input type="text" id="cargo" name="cargo" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" maxlength="50" disabled >',null,'35','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('37','<label>Fecha de Inicio</label> <input type="text" id="fecha_ini" name="fecha_ini" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled>',null,'35','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('38','<label>Fecha Fin</label> <input type="text" id="fecha_fin" name="fecha_fin" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" disabled >',null,'35','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('39','SI',null,'36','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('40','NO',null,'36','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('41','<label>Organizaci√≥n</label> <input type="text" id="organizacion" name="organizacion" class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" maxlength="50" disabled>',null,'36','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('42','<label>Fecha de Inicio</label> <input type="text" id="fecha_ini_1" name="fecha_ini_1" class="form-control campo-vd  col-lg-6 col-md-6 col-sm-6"  disabled>',null,'36','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('43','<label>Fecha Fin</label> <input type="text" id="fecha_fin_1" name="fecha_fin_1" class="form-control campo-vd  col-lg-6 col-md-6 col-sm-6" disabled>',null,'36','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('44','SI',null,'37','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('45','NO',null,'37','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('46','<label>Nombre</label> <input type="text" id="nombre_1" name="nombre_1" class="form-control campo-vd  col-lg-6 col-md-6 col-sm-6" maxlength="50" disabled >',null,'37','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('47','<label>Cargo</label> <input type="text" id="cargo_1" name="cargo_1" class="form-control campo-vd  col-lg-6 col-md-6 col-sm-6" maxlength="50" disabled >',null,'37','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('48','<label>Parentesco</label>',null,'37','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('49','<label>(&) decreto 1674 donde se establece que las personas expuestas pol√≠ticamente son aquellas que (a) Manejan recursos p√∫blicos, (b) Posee alg√∫n grado de poder p√∫blico y/o (c) Tiene o
goza de reconocimiento o de influencia en la vida p√∫blica pol√≠tica.</label>',null,'37','6');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('50','<label>(&&) Sociedad conyugal de hecho o derecho ‚Äì C√≥nyuges, familiares hasta segundo grado de consanguinidad ‚Äì Padres, Hijos, Abuelos, Hermanos, Nietos. Familiares hasta en el segundo
grado de afinidad ‚Äì Suegros, Cu√±ados, Hijastros, Yernos, Nueras. Familiares hasta el primer grado civil ‚Äì Padre adoptante, Hijo adoptivo.</label>',null,'37','7');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('1','Menos de 1,5 millones',null,'1','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('2','De 1,5  a menos de 2,5 millones',null,'1','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('3','De 2,5  a menos de 4 millones',null,'1','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('4','De 4  a menos de 7 millones',null,'1','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('5','Menos de 1,5 millones',null,'2','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('8','De 4  a menos de 7 millones',null,'2','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('6','Menos de 1,5 millones',null,'2','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('7','De 2,5  a menos de 4 millones',null,'2','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('9','De 7 millones en adelante',null,'1','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('10','De 7 millones en adelante',null,'2','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('12','Menos de 1,5 millones',null,'3','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('13','De 1,5  a menos de 2,5 millones',null,'3','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('14','De 2,5  a menos de 4 millones',null,'3','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('15','De 4  a menos de 7 millones',null,'3','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('16','De 7 millones en adelante',null,'3','6');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('17','SI',null,'6','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('18','NO',null,'6','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('19','Exportaciones',null,'7','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('21','Transferencias',null,'7','3');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('20','Importaciones',null,'7','2');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('22','Pago de servicios',null,'7','4');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('23','Prestamos en moneda extranjera',null,'7','5');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('24','Inversiones',null,'7','6');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('25','<input class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" type="text" name="valor_activo" id="valor_activo"  maxlength="17">',null,'4','1');
Insert into VDIRMP.VDIR_RESPUESTA (COD_RESPUESTA,DES_RESPUESTA,PUNTUACION,COD_PREGUNTA,NUMERO_RESPUESTA) values ('26','<input class="form-control campo-vd col-lg-6 col-md-6 col-sm-6" type="text" name="valor_pasivo" id="valor_pasivo"  maxlength="17" >',null,'5','1');
REM INSERTING into VDIRMP.VDIR_RESPUESTAS_MARCADAS
SET DEFINE OFF;
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('1','53','1','1','1');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('2','53','5','5','2');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('3','53','12','12','3');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('4','53','27','detalle','3');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('5','53','25','4000','4');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('6','53','26','8000','5');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('7','53','17','17','6');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('8','53','19','19','7');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('9','53','28','28','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('10','53','30','banco','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('11','53','31','calir','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('12','53','32','colombia','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('13','53','33','1','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('14','53','34','34','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('15','53','36','cargo','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('16','53','37','2018/12/12','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('17','53','38','2018/12/13','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('18','53','39','39','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('19','53','41','oraganizacion','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('20','53','42','2018/12/13','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('21','53','43','2018/12/28','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('22','53','44','44','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('23','53','46','nombre1','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('24','53','47','caargo1','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('25','53','48','1','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('26','53','51','hla mdno','38');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('27','54','1','1','1');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('28','54','5','5','2');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('29','54','13','13','3');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('30','54','27','detalle1','3');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('31','54','25','5666','4');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('32','54','26','6777','5');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('33','54','17','17','6');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('34','54','19','19','7');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('35','54','28','28','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('36','54','30','fdf','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('37','54','31','ddf','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('38','54','32','vcv','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('39','54','33','1','34');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('40','54','34','34','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('41','54','36','vcvc','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('42','54','37','2018/12/13','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('43','54','38','2018/12/28','35');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('44','54','39','39','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('45','54','41','cvcv','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('46','54','42','2018/12/05','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('47','54','43','2018/12/21','36');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('48','54','44','44','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('49','54','46','trtrt','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('50','54','47','gfgf','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('51','54','48','1','37');
Insert into VDIRMP.VDIR_RESPUESTAS_MARCADAS (COD_RESPUESTAS_MARCADAS,COD_ENCUESTA_PERSONA,COD_RESPUESTA,VALOR_RESPUESTA,COD_PREGUNTA) values ('52','54','51','cvcv','38');
REM INSERTING into VDIRMP.VDIR_ROL
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ROL (COD_ROL,DES_ROL,COD_ESTADO) values ('1','Usuario','1');
Insert into VDIRMP.VDIR_ROL (COD_ROL,DES_ROL,COD_ESTADO) values ('2','Auditor','1');
REM INSERTING into VDIRMP.VDIR_ROL_USUARIO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_ROL_USUARIO (COD_ROL_USUARIO,COD_USUARIO,COD_ROL) values ('1','2','1');
Insert into VDIRMP.VDIR_ROL_USUARIO (COD_ROL_USUARIO,COD_USUARIO,COD_ROL) values ('21','21','1');
REM INSERTING into VDIRMP.VDIR_SEGURO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_SEGURO (COD_SEGURO,DES_SEGURO,COD_PROGRAMA,VALOR,COD_ESTADO) values ('1','Eventos criticos','1','20000','1');
Insert into VDIRMP.VDIR_SEGURO (COD_SEGURO,DES_SEGURO,COD_PROGRAMA,VALOR,COD_ESTADO) values ('2','Desempleo','1','30000','1');
REM INSERTING into VDIRMP.VDIR_SEXO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_SEXO (COD_SEXO,DES_SEXO,COD_ESTADO,DES_ABR) values ('1','Masculino','1','M');
Insert into VDIRMP.VDIR_SEXO (COD_SEXO,DES_SEXO,COD_ESTADO,DES_ABR) values ('2','Femenino','1','F');
REM INSERTING into VDIRMP.VDIR_TARIFA
SET DEFINE OFF;
REM INSERTING into VDIRMP.VDIR_TIPO_FILE
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_FILE (COD_TIPO_FILE,DES_TIPO_FILE,COD_ESTADO) values ('1','Cobertura inicial','1');
Insert into VDIRMP.VDIR_TIPO_FILE (COD_TIPO_FILE,DES_TIPO_FILE,COD_ESTADO) values ('2','Cobertura_final','1');
Insert into VDIRMP.VDIR_TIPO_FILE (COD_TIPO_FILE,DES_TIPO_FILE,COD_ESTADO) values ('3','Contrato programa','1');
REM INSERTING into VDIRMP.VDIR_TIPO_IDENTIFICACION
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('1','Cedula','1','CC');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('2','Nit','1','NIT');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('3','Cedula extrangeria','1','CE');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('4','Pasaporte','1','PASS');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('5','PERMISO ESPECIAL DE PERMANECIA','1','PE');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('6','Registro Civil de Nacimiento','1','RC');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('7','Tarjeta de Identidad','1','TI');
Insert into VDIRMP.VDIR_TIPO_IDENTIFICACION (COD_TIPO_IDENTIFICACION,DES_TIPO_IDENTIFICACION,COD_ESTADO,DES_ABR) values ('8','Bebe gestante       ','1','BG');
REM INSERTING into VDIRMP.VDIR_TIPO_PAGO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_PAGO (COD_TIPO_PAGO,DES_TIPO_PAGO,COD_ESTADO) values ('1','Primera cuota','1');
Insert into VDIRMP.VDIR_TIPO_PAGO (COD_TIPO_PAGO,DES_TIPO_PAGO,COD_ESTADO) values ('2','Semestral','1');
Insert into VDIRMP.VDIR_TIPO_PAGO (COD_TIPO_PAGO,DES_TIPO_PAGO,COD_ESTADO) values ('3','Anual','1');
REM INSERTING into VDIRMP.VDIR_TIPO_PERSONA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_PERSONA (COD_TIPO_PERSONA,DES_TIPO_PERSONA,COD_ESTADO) values ('1','Contratante','1');
Insert into VDIRMP.VDIR_TIPO_PERSONA (COD_TIPO_PERSONA,DES_TIPO_PERSONA,COD_ESTADO) values ('2','Beneficiario','1');
REM INSERTING into VDIRMP.VDIR_TIPO_SOLICITUD
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_SOLICITUD (COD_TIPO_SOLICITUD,DES_TIPO_SOLICITUD,COD_ESTADO) values ('1','Inclusion','1');
Insert into VDIRMP.VDIR_TIPO_SOLICITUD (COD_TIPO_SOLICITUD,DES_TIPO_SOLICITUD,COD_ESTADO) values ('2','Venta_nueva','1');
REM INSERTING into VDIRMP.VDIR_TIPO_TARIFA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_TARIFA (COD_TIPO_TARIFA,DES_TIPO_TARIFA,COD_ESTADO) values ('1','Promoci√≥n','1');
Insert into VDIRMP.VDIR_TIPO_TARIFA (COD_TIPO_TARIFA,DES_TIPO_TARIFA,COD_ESTADO) values ('2','Normal','1');
REM INSERTING into VDIRMP.VDIR_TIPO_VIA
SET DEFINE OFF;
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('1','Apartado Aereo','1','AA');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('2','Avenida Calle','1','AC');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('3','Administracion','1','AD');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('4','Aeropuerto','1','AE');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('5','Avenida Carrera','1','AK');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('6','Altillo','1','AL');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('7','Apartamento','1','AP');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('8','Autopista','1','AU');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('9','Avenida','1','AV');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('10','Bodega','1','BG');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('11','Bulevar','1','BL');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('12','Bloque','1','BQ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('13','Barrio','1','BR');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('14','Centro Comercial','1','CC');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('15','Ciudadela','1','CD');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('16','Centro Comercial','1','CE');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('17','Calle','1','CL');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('18','Condominio','1','CM');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('19','Conjunto','1','CO');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('20','Circular','1','CQ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('21','Casa','1','CS');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('22','Carretera','1','CT');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('23','Circunvalar','1','CV');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('24','Diagonal','1','DG');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('25','Deposito','1','DP');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('26','Edificio','1','ED');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('27','Entrada','1','EN');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('28','Esquina','1','EQ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('29','Escalera','1','ES');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('30','Etapa','1','ET');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('31','Finca','1','FI');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('32','Garaje','1','GR');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('33','Garaje Sotano','1','GS');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('34','Interior','1','IN');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('35','Kilometro','1','KM');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('36','Carrera','1','KR');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('37','Local','1','LC');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('38','Local Mezzanine','1','LM');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('39','Lote','1','LT');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('40','Mezzanine','1','MN');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('41','Manzana','1','MZ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('42','Parqueadero','1','PA');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('43','Predio','1','PD');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('44','Pent House','1','PH');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('45','Piso','1','PI');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('46','Pasaje','1','PJ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('47','Planta','1','PL');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('48','Parque','1','PQ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('49','Porteria','1','PR');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('50','Paseo','1','PS');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('51','Puesto','1','PT');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('52','Puesto','1','PU');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('53','Round Point Glorieta','1','RP');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('54','Semisotano','1','SS');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('55','Suite','1','ST');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('56','Torre','1','TO');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('57','Transversal','1','TV');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('58','Terraza','1','TZ');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('59','Unidad Residencial','1','UN');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('60','Urbanizacion','1','UR');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('61','V√≠a','1','VI');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('62','Variante','1','VT');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('63','X','1','XX');
Insert into VDIRMP.VDIR_TIPO_VIA (COD_TIPO_VIA,DES_TIPO_VIA,COD_ESTADO,ABR_TIPO_VIA) values ('64','Zona','1','ZN');
REM INSERTING into VDIRMP.VDIR_USUARIO
SET DEFINE OFF;
Insert into VDIRMP.VDIR_USUARIO (COD_USUARIO,LOGIN,CLAVE,COD_PERSONA,COD_ESTADO,CODIGO_SEGURIDAD,COD_PLAN) values ('2','felipe','nAQP1cNi81CEdI8v7TXTuQ==','12','1','8959',null);
Insert into VDIRMP.VDIR_USUARIO (COD_USUARIO,LOGIN,CLAVE,COD_PERSONA,COD_ESTADO,CODIGO_SEGURIDAD,COD_PLAN) values ('21','casti','ai5Q6bzxQPWkT5Cy11bFRw==','21','1',null,'2');
--------------------------------------------------------
--  DDL for Index SYS_C0010013
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010013" ON "VDIRMP"."VDIR_TIPO_FILE" ("COD_TIPO_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010016
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010016" ON "VDIRMP"."VDIR_FILE" ("COD_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010021
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010021" ON "VDIRMP"."VDIR_FILE_BENEFICIARIO" ("COD_FILE_BENEFICIARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010027
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010027" ON "VDIRMP"."VDIR_ENCUESTA" ("COD_ENCUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010032
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010032" ON "VDIRMP"."VDIR_PREGUNTA" ("COD_PREGUNTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010037
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010037" ON "VDIRMP"."VDIR_RESPUESTA" ("COD_RESPUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010082
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010082" ON "VDIRMP"."VDIR_IMPUESTO" ("COD_IMPUESTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010089
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010089" ON "VDIRMP"."VDIR_SEGURO" ("COD_SEGURO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010095
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010095" ON "VDIRMP"."VDIR_TIPO_PAGO" ("COD_TIPO_PAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010100
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010100" ON "VDIRMP"."VDIR_FORMA_PAGO" ("COD_FORMA_PAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010111
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010111" ON "VDIRMP"."VDIR_FACTURA" ("COD_FACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010129
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010129" ON "VDIRMP"."VDIR_FACTURA_DETALLE" ("COD_FACTURA_DETALLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010180
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010180" ON "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ("COD_AFILIACION_AUDITORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010187
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010187" ON "VDIRMP"."VDIR_FILE_AUDITORIA" ("COD_FILE_AUDITORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010193
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010193" ON "VDIRMP"."VDIR_ENCUESTA_PERSONA" ("COD_ENCUESTA_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010224
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010224" ON "VDIRMP"."VDIR_MENU" ("COD_MENU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010268
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010268" ON "VDIRMP"."VDIR_COMUNA" ("COD_COMUNA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010275
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010275" ON "VDIRMP"."VDIR_BARRIO" ("COD_BARRIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010317
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010317" ON "VDIRMP"."VDIR_PARAMETRO" ("COD_PARAMETRO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010390
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010390" ON "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" ("COD_LOG_USUARIOS_SISTEMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010460
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010460" ON "VDIRMP"."VDIR_MODULO_ENCUESTA" ("COD_MODULO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010484
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010484" ON "VDIRMP"."VDIR_MONEDA" ("COD_MONEDA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010534
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010534" ON "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ("COD_RESPUESTAS_MARCADAS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010637
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010637" ON "VDIRMP"."VDIR_TIPO_TARIFA" ("COD_TIPO_TARIFA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010645
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010645" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_CONTRATANTE_BENEFICIARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010653
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010653" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_BENEFICIARIO_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010683
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010683" ON "VDIRMP"."VDIR_TIPO_SOLICITUD" ("COD_TIPO_SOLICITUD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0010780
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."SYS_C0010780" ON "VDIRMP"."VDIR_PROGRAMA_FILE" ("COD_PROGRAMA_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_AFILIACION_AUDITORIA_IND
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_AFILIACION_AUDITORIA_IND" ON "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_AFILIACION_AUDITORIA_IND1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_AFILIACION_AUDITORIA_IND1" ON "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ("COD_AUDITOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_AFILIACION_AUDITORIA_IND2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_AFILIACION_AUDITORIA_IND2" ON "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_AFILIACIONES_INDEX5
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_AFILIACIONES_INDEX5" ON "VDIRMP"."VDIR_AFILIACION" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_AFILIACIONES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_AFILIACIONES_PK" ON "VDIRMP"."VDIR_AFILIACION" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_BENEFICIARIO_PROGRAMA_IN
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA_IN" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_BENEFICIARIO_PROGRAMA_IN1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA_IN1" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_BENEFICIARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_BENEFICIARIO_PROGRAMA_IN2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA_IN2" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_TARIFA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_BENEFICIARIO_PROGRAMA_IN3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA_IN3" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_BENEFICIARIO_PROGRAMA_IN4
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA_IN4" ON "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_BENEFICIARIO", "COD_PROGRAMA", "COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_CONTRATANTE_BENEFICIARIO
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_CONTRATANTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_CONTRATANTE_BENEFICIARIO1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO1" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_BENEFICIARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_CONTRATANTE_BENEFICIARIO2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO2" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_PARENTESCO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_CONTRATANTE_BENEFICIARIO3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO3" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_CONTRATANTE_BENEFICIARIO4
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO4" ON "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ("COD_TIPO_SOLICITUD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_DEPARTAMENTO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_DEPARTAMENTO_INDEX1" ON "VDIRMP"."VDIR_DEPARTAMENTO" ("COD_PAIS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_DEPARTAMENTO_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_DEPARTAMENTO_INDEX2" ON "VDIRMP"."VDIR_DEPARTAMENTO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_DEPARTAMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_DEPARTAMENTO_PK" ON "VDIRMP"."VDIR_DEPARTAMENTO" ("COD_DEPARTAMENTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ENCUESTA_CONTRATANTE_IND
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ENCUESTA_CONTRATANTE_IND" ON "VDIRMP"."VDIR_ENCUESTA_PERSONA" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ENCUESTA_CONTRATANTE_IND1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ENCUESTA_CONTRATANTE_IND1" ON "VDIRMP"."VDIR_ENCUESTA_PERSONA" ("COD_ENCUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ENCUESTA_CONTRATANTE_IND2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ENCUESTA_CONTRATANTE_IND2" ON "VDIRMP"."VDIR_ENCUESTA_PERSONA" ("COD_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_EPS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_EPS_PK" ON "VDIRMP"."VDIR_EPS" ("COD_EPS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ESTADO_CIVIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_ESTADO_CIVIL_PK" ON "VDIRMP"."VDIR_ESTADO_CIVIL" ("COD_ESTADO_CIVIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ESTADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_ESTADO_PK" ON "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_DETALLE_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_DETALLE_INDEX1" ON "VDIRMP"."VDIR_FACTURA_DETALLE" ("COD_BENEFICIARIO_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_DETALLE_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_DETALLE_INDEX2" ON "VDIRMP"."VDIR_FACTURA_DETALLE" ("COD_FACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_INDEX1" ON "VDIRMP"."VDIR_FACTURA" ("COD_TIPO_PAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_INDEX2" ON "VDIRMP"."VDIR_FACTURA" ("COD_FORMA_PAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_INDEX3" ON "VDIRMP"."VDIR_FACTURA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FACTURA_INDEX4
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FACTURA_INDEX4" ON "VDIRMP"."VDIR_FACTURA" ("COD_USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_AFILIACION_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_AFILIACION_INDEX1" ON "VDIRMP"."VDIR_FILE_BENEFICIARIO" ("COD_AFILIACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_AFILIACION_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_AFILIACION_INDEX2" ON "VDIRMP"."VDIR_FILE_BENEFICIARIO" ("COD_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_AUDITORIA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_AUDITORIA_INDEX1" ON "VDIRMP"."VDIR_FILE_AUDITORIA" ("COD_AFILIACION_AUDITORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_AUDITORIA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_AUDITORIA_INDEX2" ON "VDIRMP"."VDIR_FILE_AUDITORIA" ("COD_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_AUDITORIA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_AUDITORIA_INDEX3" ON "VDIRMP"."VDIR_FILE_AUDITORIA" ("COD_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_BENEFICIARIO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_BENEFICIARIO_INDEX1" ON "VDIRMP"."VDIR_FILE_BENEFICIARIO" ("COD_BENEFICIARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FILE_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FILE_INDEX1" ON "VDIRMP"."VDIR_FILE" ("COD_TIPO_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_FORMA_PAGO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_FORMA_PAGO_INDEX1" ON "VDIRMP"."VDIR_FORMA_PAGO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_IMPUESTO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_IMPUESTO_INDEX1" ON "VDIRMP"."VDIR_IMPUESTO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_MENU_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_MENU_INDEX1" ON "VDIRMP"."VDIR_MENU" ("COD_PADRE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_MUNICIPIO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_MUNICIPIO_INDEX1" ON "VDIRMP"."VDIR_MUNICIPIO" ("COD_DEPARTAMENTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_MUNICIPIO_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_MUNICIPIO_INDEX2" ON "VDIRMP"."VDIR_MUNICIPIO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_MUNICIPIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_MUNICIPIO_PK" ON "VDIRMP"."VDIR_MUNICIPIO" ("COD_MUNICIPIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PAIS_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PAIS_INDEX1" ON "VDIRMP"."VDIR_PAIS" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PAIS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PAIS_PK" ON "VDIRMP"."VDIR_PAIS" ("COD_PAIS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PARAMETRO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PARAMETRO_INDEX1" ON "VDIRMP"."VDIR_PARAMETRO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PARENTESCO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PARENTESCO_INDEX1" ON "VDIRMP"."VDIR_PARENTESCO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PARENTESCO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PARENTESCO_PK" ON "VDIRMP"."VDIR_PARENTESCO" ("COD_PARENTESCO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX1" ON "VDIRMP"."VDIR_PERSONA" ("COD_TIPO_IDENTIFICACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX2" ON "VDIRMP"."VDIR_PERSONA" ("NUMERO_IDENTIFICACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX3" ON "VDIRMP"."VDIR_PERSONA" ("COD_SEXO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX4
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX4" ON "VDIRMP"."VDIR_PERSONA" ("COD_MUNICIPIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX5
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX5" ON "VDIRMP"."VDIR_PERSONA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX6
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX6" ON "VDIRMP"."VDIR_PERSONA" ("COD_EPS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_INDEX7
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_INDEX7" ON "VDIRMP"."VDIR_PERSONA" ("COD_ESTADO_CIVIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_TIPOPER_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_TIPOPER_INDEX1" ON "VDIRMP"."VDIR_PERSONA_TIPOPER" ("COD_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_TIPOPER_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PERSONA_TIPOPER_INDEX2" ON "VDIRMP"."VDIR_PERSONA_TIPOPER" ("COD_TIPO_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PERSONA_TIPOPER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PERSONA_TIPOPER_PK" ON "VDIRMP"."VDIR_PERSONA_TIPOPER" ("COD_PERSONA_TIPOPER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PLAN_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PLAN_INDEX1" ON "VDIRMP"."VDIR_PLAN" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PLAN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PLAN_PK" ON "VDIRMP"."VDIR_PLAN" ("COD_PLAN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PREGUNTA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PREGUNTA_INDEX1" ON "VDIRMP"."VDIR_PREGUNTA" ("COD_ENCUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PREGUNTA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PREGUNTA_INDEX2" ON "VDIRMP"."VDIR_PREGUNTA" ("COD_MODULO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PREGUNTA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PREGUNTA_INDEX3" ON "VDIRMP"."VDIR_PREGUNTA" ("NUMERO_PREGUNTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PRODUCTO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PRODUCTO_INDEX1" ON "VDIRMP"."VDIR_PRODUCTO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PRODUCTO_PK" ON "VDIRMP"."VDIR_PRODUCTO" ("COD_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_FILE_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PROGRAMA_FILE_INDEX1" ON "VDIRMP"."VDIR_PROGRAMA_FILE" ("COD_FILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_FILE_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PROGRAMA_FILE_INDEX2" ON "VDIRMP"."VDIR_PROGRAMA_FILE" ("COD_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_FILE_INDEX3
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PROGRAMA_FILE_INDEX3" ON "VDIRMP"."VDIR_PROGRAMA_FILE" ("COD_FILE", "COD_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PROGRAMA_INDEX1" ON "VDIRMP"."VDIR_PROGRAMA" ("COD_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PROGRAMA_INDEX2" ON "VDIRMP"."VDIR_PROGRAMA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_PROGRAMA_INDEX3" ON "VDIRMP"."VDIR_PROGRAMA" ("COD_IMPUESTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_PROGRAMA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_PROGRAMA_PK" ON "VDIRMP"."VDIR_PROGRAMA" ("COD_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_RESPUESTA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_RESPUESTA_INDEX1" ON "VDIRMP"."VDIR_RESPUESTA" ("COD_PREGUNTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_RESPUESTA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_RESPUESTA_INDEX2" ON "VDIRMP"."VDIR_RESPUESTA" ("NUMERO_RESPUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_RESPUESTAS_MARCADAS_INDE
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_RESPUESTAS_MARCADAS_INDE" ON "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ("COD_ENCUESTA_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_RESPUESTAS_MARCADAS_INDE1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_RESPUESTAS_MARCADAS_INDE1" ON "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ("COD_RESPUESTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_RESPUESTAS_MARCADAS_INDE2
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_RESPUESTAS_MARCADAS_INDE2" ON "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ("COD_ENCUESTA_PERSONA", "COD_RESPUESTA", "COD_PREGUNTA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ROL_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ROL_INDEX1" ON "VDIRMP"."VDIR_ROL" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ROL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_ROL_PK" ON "VDIRMP"."VDIR_ROL" ("COD_ROL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ROL_USUARIO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ROL_USUARIO_INDEX1" ON "VDIRMP"."VDIR_ROL_USUARIO" ("COD_USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ROL_USUARIO_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_ROL_USUARIO_INDEX2" ON "VDIRMP"."VDIR_ROL_USUARIO" ("COD_ROL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_ROL_USUARIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_ROL_USUARIO_PK" ON "VDIRMP"."VDIR_ROL_USUARIO" ("COD_ROL_USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_SEXO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_SEXO_INDEX1" ON "VDIRMP"."VDIR_SEXO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_SEXO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_SEXO_PK" ON "VDIRMP"."VDIR_SEXO" ("COD_SEXO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TARIFA_INDEX1" ON "VDIRMP"."VDIR_TARIFA" ("COD_PROGRAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TARIFA_INDEX2" ON "VDIRMP"."VDIR_TARIFA" ("COD_PLAN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_INDEX3
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TARIFA_INDEX3" ON "VDIRMP"."VDIR_TARIFA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_INDEX4
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TARIFA_INDEX4" ON "VDIRMP"."VDIR_TARIFA" ("COD_IMPUESTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_INDEX5
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TARIFA_INDEX5" ON "VDIRMP"."VDIR_TARIFA" ("COD_TIPO_TARIFA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TARIFA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_TARIFA_PK" ON "VDIRMP"."VDIR_TARIFA" ("COD_TARIFA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_FILE_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_FILE_INDEX1" ON "VDIRMP"."VDIR_TIPO_FILE" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_IDENTIFICACION_INDE
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_IDENTIFICACION_INDE" ON "VDIRMP"."VDIR_TIPO_IDENTIFICACION" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_IDENTIFICACION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_TIPO_IDENTIFICACION_PK" ON "VDIRMP"."VDIR_TIPO_IDENTIFICACION" ("COD_TIPO_IDENTIFICACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_PAGO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_PAGO_INDEX1" ON "VDIRMP"."VDIR_TIPO_PAGO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_PERSONA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_PERSONA_INDEX1" ON "VDIRMP"."VDIR_TIPO_PERSONA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_PERSONA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_TIPO_PERSONA_PK" ON "VDIRMP"."VDIR_TIPO_PERSONA" ("COD_TIPO_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_SOLICITUD_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_SOLICITUD_INDEX1" ON "VDIRMP"."VDIR_TIPO_SOLICITUD" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_TARIFA_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_TIPO_TARIFA_INDEX1" ON "VDIRMP"."VDIR_TIPO_TARIFA" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_TIPO_VIA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_TIPO_VIA_PK" ON "VDIRMP"."VDIR_TIPO_VIA" ("COD_TIPO_VIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_INDEX1
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_USUARIO_INDEX1" ON "VDIRMP"."VDIR_USUARIO" ("LOGIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_INDEX2
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_USUARIO_INDEX2" ON "VDIRMP"."VDIR_USUARIO" ("CLAVE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_INDEX3
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_USUARIO_INDEX3" ON "VDIRMP"."VDIR_USUARIO" ("COD_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_INDEX4
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_USUARIO_INDEX4" ON "VDIRMP"."VDIR_USUARIO" ("COD_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_INDEX5
--------------------------------------------------------

  CREATE INDEX "VDIRMP"."VDIR_USUARIO_INDEX5" ON "VDIRMP"."VDIR_USUARIO" ("COD_PLAN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_USUARIO_PK" ON "VDIRMP"."VDIR_USUARIO" ("COD_USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VDIR_USUARIO_PKV2
--------------------------------------------------------

  CREATE UNIQUE INDEX "VDIRMP"."VDIR_USUARIO_PKV2" ON "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Package VDIR_PACK_ENCUESTAS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "VDIRMP"."VDIR_PACK_ENCUESTAS" AS 

--FUNCION PARA TRAER UNA ENCUESTA DE SARLAF-------------------------------
    FUNCTION VDIR_FN_GET_ENCUESTA_SARLAF RETURN CLOB;
    
 --FUNCION PARA TRAER UNA LISTA DE MONEDAS
   FUNCTION VDIR_FN_GET_LIST_MONEDA RETURN VARCHAR2;
   
  --FUNCION PARA TRAER UNA LISTA DE PARENTESCOS
   FUNCTION VDIR_FN_GET_LIST_PARENTESCO RETURN VARCHAR2;
   
   --PROCEDIMIENTO PARA GUARDAR LA ENCUESTA
   PROCEDURE VDIR_FN_GUARDAR_ENCUESTA(p_codigo_encuesta IN VDIR_ENCUESTA.COD_ENCUESTA%TYPE,p_codigo_pregunta IN VDIR_PREGUNTA.COD_PREGUNTA%TYPE,p_codigo_respuesta IN VDIR_RESPUESTA.COD_RESPUESTA%TYPE,p_cod_afiliacion IN VDIR_AFILIACION.COD_AFILIACION%TYPE,p_valor_respuesta IN VDIR_RESPUESTAS_MARCADAS.VALOR_RESPUESTA%TYPE,p_codigo_persona IN VDIR_PERSONA.COD_PERSONA%TYPE,p_respuesta OUT VARCHAR2);
  
 --FUNCION PARA TRAER LA ENCUESTA SARLAF YA DILIGENCIADA-------------------------------
   FUNCTION VDIR_FN_GET_DATOS_ENCT(p_codigo_afiliacion IN VDIR_AFILIACION.COD_AFILIACION%TYPE,p_codigo_persona IN VDIR_PERSONA.COD_PERSONA%TYPE) RETURN CLOB;
    
END VDIR_PACK_ENCUESTAS;

/
--------------------------------------------------------
--  DDL for Package VDIR_PACK_INICIO_SESSION
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "VDIRMP"."VDIR_PACK_INICIO_SESSION" AS 

  ----------------------------------------------- FUNCION PARA TRAER DATOS DEL TIPO DE DOCUMENTO  
  FUNCTION VDIR_FN_GET_TIPO_DOCUMENTO RETURN sys_refcursor;
  
   ----------------------------------------------- FUNCION PARA TRAER DATOS DEL SEXO  
  FUNCTION VDIR_FN_GET_SEXO RETURN sys_refcursor;
  
  ------------------------------------------------ PROCEDIMIENTO PARA GUARDAR EL USUARIO  
  PROCEDURE VDIR_SP_GUARDAR_USUARIO (
                             p_tipo_identificacion IN VDIR_PERSONA.COD_TIPO_IDENTIFICACION%TYPE,                            
                             p_numero_identificacion IN VDIR_PERSONA.NUMERO_IDENTIFICACION%TYPE,
                             p_nombre_1 IN VDIR_PERSONA.NOMBRE_1%TYPE,
                             p_nombre_2 IN VDIR_PERSONA.NOMBRE_2%TYPE,
                             p_apellido_1 IN VDIR_PERSONA.APELLIDO_1%TYPE,
                             p_apellido_2 IN VDIR_PERSONA.APELLIDO_2%TYPE,
                             p_fecha_nacimiento IN VARCHAR2, 
                             p_cod_sexo IN VDIR_PERSONA.COD_SEXO%TYPE,
                             p_telefono IN VDIR_PERSONA.TELEFONO%TYPE,
                             p_celular IN VDIR_PERSONA.CELULAR%TYPE,
                             p_email IN VDIR_PERSONA.EMAIL%TYPE,
                             p_usuario IN VDIR_USUARIO.LOGIN%TYPE,
                             p_clave IN VDIR_USUARIO.CLAVE%TYPE,
                             p_tipo_persona IN VDIR_TIPO_PERSONA.COD_TIPO_PERSONA%TYPE,
                             p_plan IN VDIR_PLAN.COD_PLAN%TYPE,
                             p_cod_estado IN VDIR_ESTADO.COD_ESTADO%TYPE,                             
                             p_respuesta OUT VARCHAR2                            
                             );  
  
 ------------------------------------------------ PROCEDIMIENTO PARA ACTUALIZAR EL CODIGO DE SEGURIDAD PARA CAMBIAR LA CLAVE
 
 PROCEDURE VDIR_SP_ACTUALIZAR_COD_SEG(p_identificacacion IN VDIR_PERSONA.numero_identificacion%TYPE,p_codigo_seguridad OUT VDIR_USUARIO.CODIGO_SEGURIDAD%TYPE);

 ------------------------------------------------ PROCEDIMIENTO PARA ACTUALIZAR LA CLAVE DEL USUARIO
 PROCEDURE VDIR_SP_CAMBIAR_CLAVE(p_identificacacion IN VDIR_PERSONA.numero_identificacion%TYPE,p_codigo_seguridad IN VDIR_USUARIO.CODIGO_SEGURIDAD%TYPE,p_clave IN VDIR_USUARIO.CLAVE%TYPE,p_respuesta OUT VARCHAR2);
 
  ----------------------------------------------------------------------------  FUNCION PARA TRAER LOS DAOS DE LA PERSONA,USUAIRO Y ROLES 
 FUNCTION VDIR_FN_GET_DATOS_USUARIO(p_login IN vdir_usuario.login%TYPE,p_clave IN vdir_usuario.clave%TYPE) RETURN sys_refcursor;
 
 ------------------------------------------------------------------------------FUNCION PARA TRAER LOS ROLES QUE TIENE UNA PERSONA 
 FUNCTION VDIR_FN_GET_ROLES_PERSONA(p_cod_user IN vdir_usuario.cod_usuario%TYPE) RETURN VARCHAR2;
 
 
 ------------------------------------------------ PROCEDIMIENTO PARA INSERTAR EL LOG DE USUARIO
 PROCEDURE VDIR_SP_INSERT_LOG_USER(p_login IN VDIR_USUARIO.login%TYPE,p_ip IN VARCHAR2,p_navegador IN VARCHAR2);

 

END VDIR_PACK_INICIO_SESSION;

/
--------------------------------------------------------
--  DDL for Package VDIR_PACK_REGISTRO_DATOS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "VDIRMP"."VDIR_PACK_REGISTRO_DATOS" AS
/* ---------------------------------------------------------------------
 Copyright  Tecnolog√≠a Inform√°tica Coomeva - Colombia
 Package     : VDIR_PACK_REGISTRO_DATOS
 Caso de Uso : 
 Descripci√≥n : Procesos para la ejecucion del requerimiento Registro datos basicos - VENTA DIRECTA
 --------------------------------------------------------------------
 Autor : diego.castillo@kalettre.com
 Fecha : 03-12-2018  
 --------------------------------------------------------------------
 Procedimiento :     Descripcion:
 --------------------------------------------------------------------
 Historia de Modificaciones
 ---------------------------------------------------------------------
 Fecha Autor Modificaci√≥n
 ----------------------------------------------------------------- */

 ----------------------------------------------------------------------------
 -- Declaracion de estructuras dinamicas
 ----------------------------------------------------------------------------
 TYPE type_cursor IS REF CURSOR;

/*---------------------------------------------------------------------
  fn_get_contratante: Traer la informacion del usuario contratante
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_contratante
 (
    pty_cod_usuario in vdir_usuario.cod_usuario%type
 )RETURN type_cursor;

/*---------------------------------------------------------------------
  fn_get_info_persona: Taer iformacion de la persona con el numero de y tipo de identificacion
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_info_persona
 (
    pty_num_indentificacion in vdir_persona.numero_identificacion%type,
    pty_tip_indentificacion in vdir_persona.cod_tipo_identificacion%type
 )RETURN type_cursor;

END VDIR_PACK_REGISTRO_DATOS;

/
--------------------------------------------------------
--  DDL for Package VDIR_PACK_REGISTRO_PRODUCTOS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "VDIRMP"."VDIR_PACK_REGISTRO_PRODUCTOS" AS
/* ---------------------------------------------------------------------
 Copyright  Tecnolog√≠a Inform√°tica Coomeva - Colombia
 Package     : VDIR_PACK_REGISTRO_PRODUCTOS
 Caso de Uso : 
 Descripci√≥n : Procesos para la ejecucion del requerimiento Registro de productos - VENTA DIRECTA
 --------------------------------------------------------------------
 Autor : diego.castillo@kalettre.com
 Fecha : 10-12-2018  
 --------------------------------------------------------------------
 Procedimiento :     Descripcion:
 --------------------------------------------------------------------
 Historia de Modificaciones
 ---------------------------------------------------------------------
 Fecha Autor Modificaci√≥n
 ----------------------------------------------------------------- */

 ----------------------------------------------------------------------------
 -- Declaracion de estructuras dinamicas
 ----------------------------------------------------------------------------
 TYPE type_cursor IS REF CURSOR;

/*---------------------------------------------------------------------
  fn_get_tarifa: Traer la tarifa de un producto de acuerdo al contratante
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_producto
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN type_cursor;

 /*---------------------------------------------------------------------
  fn_get_programaxproducto_str: Traer los programas de cada producto en un string con estructura de objeto
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_programaxproducto_str
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN VARCHAR2;

/*---------------------------------------------------------------------
  fn_get_tarifa: Traer los programas de cada producto en un string con estructura de objeto
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_tarifa
 (
    pty_cod_usuario in vdir_usuario.cod_usuario%type
 )RETURN NUMBER;

 /*---------------------------------------------------------------------
  fn_get_promocion_producto: Trae la el valor de la promocion a la que aplica un producto
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_promocion_producto
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN NUMBER;

 /*---------------------------------------------------------------------
  sp_set_beneficiario: Agregar beneficiario
 ----------------------------------------------------------------------- */
 PROCEDURE sp_set_beneficiario
 (
    p_cod_contratante in vdir_persona.cod_persona%type,
    p_cod_tipo_doc in vdir_persona.cod_tipo_identificacion%type,
    p_num_doc in vdir_persona.numero_identificacion%type,
    p_nombre_1 in vdir_persona.nombre_1%type,
    p_nombre_2 in vdir_persona.nombre_2%type,
    p_apellido_1 in vdir_persona.apellido_1%type,
    p_apellido_2 in vdir_persona.apellido_2%type,
    p_fecha_nacimiento in vdir_persona.fecha_nacimiento%type,
    p_telefono in vdir_persona.telefono%type,
    p_email in vdir_persona.email%type,
    p_cod_sexo in vdir_persona.cod_sexo%type,
    p_cod_municipio in vdir_persona.cod_municipio%type,
    p_celular in vdir_persona.celular%type,
    p_eps in vdir_persona.cod_eps%type,
    p_estado_civil in vdir_persona.cod_estado_civil%type,
    p_ind_tiene_mascota in vdir_persona.ind_tiene_mascota%type,
    p_tipo_via_dir in vdir_tipo_via.cod_tipo_via%type,
    p_num_tipo_via_dir in varchar2,
    p_num_placa_dir in varchar2,
    p_complemento_dir in varchar2,
    p_parentesco in vdir_parentesco.cod_parentesco%type,
    p_estado in vdir_persona.cod_estado%type,
    p_cod_afiliacion in vdir_afiliacion.cod_afiliacion%type,
    p_cod_afiliacion_out out vdir_afiliacion.cod_afiliacion%type
 );

  /*---------------------------------------------------------------------
  fn_get_afiliacion_pendiente: Trae afiliacion pendiente
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_afiliacion_pendiente
 (
    pty_cod_usuario in vdir_producto.cod_producto%type
 )RETURN vdir_afiliacion.cod_afiliacion%type;

END VDIR_PACK_REGISTRO_PRODUCTOS;

/
--------------------------------------------------------
--  DDL for Package VDIR_PACK_UTILIDADES
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "VDIRMP"."VDIR_PACK_UTILIDADES" AS 
 
   
   FUNCTION VDIR_FN_GETCOLECCION_WHERE(p_nom_cod_tabla IN VARCHAR2,p_nom_des_tabla IN VARCHAR2,p_nom_table IN VARCHAR2,p_aux_where IN VARCHAR2,p_fila_order IN VARCHAR2) RETURN sys_refcursor;

   ------------------------------------------------------------------------------FUNCION PARA TRAER LA DESCRIPCION DE UNA PARAMETRO 
    FUNCTION VDIR_FN_GET_PARAMETRO(p_codigoParametro IN NUMBER) RETURN VARCHAR2;

   ----------------------------------------------------------------------------  FUNCION PARA TRAER LOS DAOS DE LA PERSONA,USUAIRO Y ROLES 
   FUNCTION VDIR_FN_GET_DATOS_PERSONA(p_identificacion IN vdir_persona.numero_identificacion%TYPE) RETURN sys_refcursor;

   ------------------------------------------------------------------------------FUNCION PARA TRAER LOS ROLES QUE TIENE UNA PERSONA 
    FUNCTION VDIR_FN_GET_ROLES_PERSONA(p_cod_user IN vdir_usuario.cod_usuario%TYPE) RETURN VARCHAR2;

END VDIR_PACK_UTILIDADES;


/
--------------------------------------------------------
--  DDL for Package Body VDIR_PACK_ENCUESTAS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "VDIRMP"."VDIR_PACK_ENCUESTAS" AS

 FUNCTION VDIR_FN_GET_LIST_MONEDA RETURN VARCHAR2 AS
 vl_option VARCHAR2(2000);
 
 BEGIN
   
    vl_option := ' <option value="-1">Seleccione una moneda</option>'; 
    
     FOR fila IN (SELECT
                    cod_moneda,
                    des_moneda                    
                  FROM
                        vdir_moneda
                    WHERE
                        cod_estado = 1) LOOP
                        
      vl_option := vl_option||' <option value='||fila.cod_moneda||'>'||fila.des_moneda||'</option>';                 
                        
     END LOOP; 
     
     RETURN '<select disabled id="moneda" name="moneda" class="form-control lista-vd  col-lg-6 col-md-6 col-sm-6">'||vl_option||'</select>';
 
 
 END VDIR_FN_GET_LIST_MONEDA;
 
--FUNCION PARA TRAER UNA LISTA DE PARENTESCOS-----------------------------------------------
   FUNCTION VDIR_FN_GET_LIST_PARENTESCO RETURN VARCHAR2 AS 
   
   vl_option VARCHAR2(2000);
   
   BEGIN
      
       vl_option := ' <option value="-1">Seleccione un parentesco</option>'; 
    
     FOR fila IN (SELECT
                    cod_parentesco,
                    des_parentesco                    
                  FROM
                        vdir_parentesco
                    WHERE
                        cod_estado = 1) LOOP
                        
      vl_option := vl_option||' <option value='||fila.cod_parentesco||'>'||fila.des_parentesco||'</option>';                 
                        
     END LOOP; 
     
     RETURN '<select disabled id="parentesco" name="parentesco" class="form-control lista-vd  col-lg-6 col-md-6 col-sm-6">'||vl_option||'</select>';
 
   
   END VDIR_FN_GET_LIST_PARENTESCO;

-----------------------------------------------------------------------------

 FUNCTION VDIR_FN_GET_ENCUESTA_SARLAF RETURN CLOB AS
   vl_cadena CLOB;
   
   vl_form_ini VARCHAR2(100);
   vl_form_fin VARCHAR2(40);   
   vl_row_respuesta CLOB; 
   vl_row_pregunta CLOB; 
   vl_style VARCHAR2(50);
   vl_filset_ini VARCHAR2(50);
   vl_filset_fin VARCHAR2(50);
   vl_legend VARCHAR2(50);
   vl_cod_modulo NUMBER;   
   vl_filset_all CLOB;
    vl_nombre_ant_modulo VARCHAR2(100);
   
  BEGIN
     
      vl_form_ini := '<div class="container" id="form_div" name="form_div">';
      vl_form_fin := '</div>';
      vl_filset_ini := '<fieldset class="fieldset-vd">';
      vl_filset_fin := '</fieldset>';
      vl_filset_all := '';      
      vl_cod_modulo := 0;
      vl_nombre_ant_modulo := '';
  
       FOR fila IN (SELECT
                        preg.cod_pregunta,
                        preg.des_pregunta,
                        modu.des_modulo,
                        modu.cod_modulo
                    FROM
                        vdir_pregunta preg
                        
                        INNER JOIN vdir_modulo_encuesta modu
                         ON modu.cod_modulo = preg.cod_modulo
                    WHERE
                       preg.cod_encuesta = 1 ORDER BY preg.cod_modulo, preg.numero_pregunta)  LOOP 
         vl_row_respuesta := '';
         vl_style := '';         
          FOR fila2 IN(SELECT
                            cod_respuesta,
                            des_respuesta,
                            puntuacion
                            
                        FROM
                            vdir_respuesta
                        WHERE
                           cod_pregunta = fila.cod_pregunta  ORDER BY numero_respuesta) 
        LOOP
                IF fila2.cod_respuesta NOT IN(25,26,27,30,31,32,33,36,37,38,41,42,43,46,47,48,49,50,51) THEN                
                   vl_row_respuesta := vl_row_respuesta || '
                                                                <div class="form-check div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">                                                 
                                                                    <label class="radio-inline form-check-label">
                                                                      <input class="form-check-input"  type="radio" name="radio_respuesta_n_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" id="radio_respuesta_n_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" value="'||CAST(fila2.cod_respuesta AS VARCHAR2)||'"> '||fila2.des_respuesta||'
                                                                       <span class="circle">
                                                                        <span class="check"></span>
                                                                      </span>
                                                                    </label>
                                                                </div>
                                                            ';
                 ELSIF fila2.cod_respuesta = 33 THEN
                      vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">' ||fila2.des_respuesta||VDIR_PACK_ENCUESTAS.VDIR_FN_GET_LIST_MONEDA||'</div>';                      
                 ELSIF fila2.cod_respuesta = 48 THEN
                     vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">' || fila2.des_respuesta||VDIR_PACK_ENCUESTAS.VDIR_FN_GET_LIST_PARENTESCO||'</div> <br>'; 
                 ELSE                  
                   vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">' ||fila2.des_respuesta||'</div>';
                 END IF;
          END LOOP; 
          
          IF vl_cod_modulo <> fila.cod_modulo AND vl_cod_modulo > 0 THEN
            -- vl_cod_modulo := fila.cod_modulo;           
             vl_filset_all := vl_filset_all || vl_filset_ini||'<legend class="legend-vd">'||vl_nombre_ant_modulo||'</legend>'||vl_row_pregunta||vl_filset_fin;
             vl_row_pregunta := '';
          END IF;
          
          vl_cod_modulo := fila.cod_modulo; 
          vl_nombre_ant_modulo := fila.des_modulo;
          
          IF fila.cod_pregunta = 7  THEN          
                vl_style := 'style="display:none"';
          END IF;         
        
           
            vl_row_pregunta := vl_row_pregunta || '<div class="row">
                                                       <div '||vl_style||' class="col-lg-12 col-md-12 col-sm-12 div_container_pregunta" id="pregunta_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" data-pregunta = "'||CAST(fila.cod_pregunta AS VARCHAR2)||'">
                                                         <div class="title">
                                                                <h4 class="obligatorio">'||fila.des_pregunta||'</h4>
                                                         </div>                                                         
                                                           '||vl_row_respuesta||'
                                                        </div>
                                                    </div>'; 
         
         
         
      END LOOP;
    IF vl_row_pregunta IS NOT NULL AND vl_row_pregunta <> ' ' THEN
        vl_filset_all := vl_filset_all || vl_filset_ini||'<legend class="legend-vd">'||vl_nombre_ant_modulo||'</legend>'||vl_row_pregunta||vl_filset_fin;
    END IF;
      
     --vl_cadena :=  vl_form_ini||vl_row_pregunta||vl_form_fin;
     vl_cadena :=  vl_form_ini||vl_filset_all||vl_form_fin;
   
    
    RETURN vl_cadena;
  END VDIR_FN_GET_ENCUESTA_SARLAF;
  
  ---------------------------------------------------------GUARDAR ENCUESTA
  
  --PROCEDIMIENTO PARA GUARDAR LA ENCUESTA
    PROCEDURE VDIR_FN_GUARDAR_ENCUESTA(p_codigo_encuesta IN VDIR_ENCUESTA.COD_ENCUESTA%TYPE,p_codigo_pregunta IN VDIR_PREGUNTA.COD_PREGUNTA%TYPE,p_codigo_respuesta IN VDIR_RESPUESTA.COD_RESPUESTA%TYPE,p_cod_afiliacion IN VDIR_AFILIACION.COD_AFILIACION%TYPE,p_valor_respuesta IN VDIR_RESPUESTAS_MARCADAS.VALOR_RESPUESTA%TYPE,p_codigo_persona IN VDIR_PERSONA.COD_PERSONA%TYPE,p_respuesta OUT VARCHAR2)
   
   AS
   vl_cod_encuesta_afiliacion vdir_encuesta_persona.cod_encuesta_persona%TYPE;
 
   BEGIN 
   
   p_respuesta := 'Operaci√≥n realizada correctamente.';
    
   BEGIN 
    SELECT
        cod_encuesta_persona INTO  vl_cod_encuesta_afiliacion      
    FROM
        vdir_encuesta_persona
    WHERE 
       cod_encuesta = p_codigo_encuesta
       AND cod_afiliacion = p_cod_afiliacion
       AND cod_persona = p_codigo_persona;
   EXCEPTION WHEN OTHERS THEN
      vl_cod_encuesta_afiliacion := NULL;
   END;
   
   IF vl_cod_encuesta_afiliacion IS NULL THEN
   
        SELECT VDIR_SEQ_AFILIACION_ENCUESTA.NEXTVAL INTO vl_cod_encuesta_afiliacion  FROM DUAL;
   
        INSERT INTO vdir_encuesta_persona (
            cod_encuesta_persona,
            cod_afiliacion,
            cod_encuesta,
            cod_persona
        ) VALUES (
            vl_cod_encuesta_afiliacion,
            p_cod_afiliacion,
            p_codigo_encuesta,
            p_codigo_persona
        );
    
    END IF;
    
   MERGE INTO vdir_respuestas_marcadas resmar
   USING (
           SELECT
            vl_cod_encuesta_afiliacion AS cod_encuesta_afiliacion,
            p_codigo_pregunta  AS codigo_pregunta,
            p_codigo_respuesta  AS codigo_respuesta
          FROM
             DUAL   
      ) resmar2
   ON (resmar.cod_encuesta_persona = resmar2.cod_encuesta_afiliacion AND resmar.cod_pregunta = resmar2.codigo_pregunta AND resmar.cod_respuesta = resmar2.codigo_respuesta)   
   WHEN NOT MATCHED THEN 
    
    INSERT (
        cod_respuestas_marcadas,
        cod_encuesta_persona,
        cod_pregunta,
        cod_respuesta,
        valor_respuesta
    ) VALUES (
        VDIR_SEQ_RESPUESTAS_MARCADAS.NEXTVAL,
        vl_cod_encuesta_afiliacion,
        p_codigo_pregunta,
        p_codigo_respuesta,
        p_valor_respuesta
    );
    
    COMMIT;
  
  EXCEPTION 
    WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20000, 'ban commision.');
    p_respuesta := 'Ocurrio un error en la base de datos.';
  ROLLBACK;
   
   
   END VDIR_FN_GUARDAR_ENCUESTA;
   
   --FUNCION PARA TRAER LA ENCUESTA SARLAF YA DILIGENCIADA-------------------------------
   FUNCTION VDIR_FN_GET_DATOS_ENCT(p_codigo_afiliacion IN VDIR_AFILIACION.COD_AFILIACION%TYPE,p_codigo_persona IN VDIR_PERSONA.COD_PERSONA%TYPE) RETURN CLOB
   
   AS
    vl_cadena CLOB;
    
    vl_form_ini VARCHAR2(100);
    vl_form_fin VARCHAR2(40);   
    vl_row_respuesta CLOB; 
    vl_row_pregunta CLOB; 
    vl_style VARCHAR2(50);
    vl_filset_ini VARCHAR2(50);
    vl_filset_fin VARCHAR2(50);
    vl_legend VARCHAR2(50);
    vl_cod_modulo NUMBER;    
    vl_filset_all CLOB;
    vl_nombre_ant_modulo VARCHAR2(100);
    vl_checked VARCHAR2(100);
    
   BEGIN
   
      vl_form_ini := '<div class="container" id="form_div" name="form_div">';
      vl_form_fin := '</div>';
      vl_filset_ini := '<fieldset class="fieldset-vd">';
      vl_filset_fin := '</fieldset>';
      vl_filset_all := '';      
      vl_cod_modulo := 0;
      vl_nombre_ant_modulo := '';
      vl_checked := '';
  
       FOR fila IN (SELECT                       
                        preg.cod_pregunta,
                        preg.des_pregunta,
                        modu.des_modulo,
                        modu.cod_modulo
                    FROM
                        vdir_pregunta preg                        
                        
                        INNER JOIN vdir_modulo_encuesta modu
                         ON modu.cod_modulo = preg.cod_modulo                        
                       
                    WHERE
                       preg.cod_encuesta = 1 ORDER BY preg.cod_modulo, preg.numero_pregunta)  LOOP 
         vl_row_respuesta := '';                
          FOR fila2 IN(SELECT
                           
                            re.cod_respuesta,
                            re.des_respuesta,
                            re.puntuacion,
                            (SELECT  
                              (CASE WHEN rm.cod_respuesta IS NOT NULL THEN 'checked' ELSE ' ' END)                          
                               FROM
                                 vdir_respuestas_marcadas rm 
                                 
                                 INNER JOIN vdir_encuesta_persona afe
                                  ON afe.COD_ENCUESTA_PERSONA = rm.COD_ENCUESTA_PERSONA
                                  
                                 WHERE
                                   rm.cod_respuesta = re.cod_respuesta
                                   AND afe.COD_AFILIACION = p_codigo_afiliacion
                                   AND rm.cod_pregunta = fila.cod_pregunta
                                   AND afe.cod_persona = p_codigo_persona) AS checked,
                            (SELECT  
                               rm.valor_respuesta                      
                               FROM
                                 vdir_respuestas_marcadas rm 
                                 
                                 INNER JOIN vdir_encuesta_persona afe
                                  ON afe.COD_ENCUESTA_PERSONA = rm.COD_ENCUESTA_PERSONA
                                  
                                 WHERE
                                   rm.cod_respuesta = re.cod_respuesta
                                   AND afe.COD_AFILIACION = p_codigo_afiliacion
                                   AND rm.cod_pregunta = fila.cod_pregunta
                                   AND afe.cod_persona = p_codigo_persona) AS val_respuesta       
                            
                            
                        FROM
                            vdir_respuesta re                             
                                
                        WHERE
                           re.cod_pregunta = fila.cod_pregunta  ORDER BY re.numero_respuesta) 
        LOOP       
              
                
                IF fila2.cod_respuesta NOT IN(25,26,27,30,31,32,33,36,37,38,41,42,43,46,47,48,49,50,51) THEN                
                   vl_row_respuesta := vl_row_respuesta || '
                                                                <div class="form-check div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">                                                 
                                                                    <label class="radio-inline form-check-label">
                                                                      <input disabled class="form-check-input" '||fila2.checked||' type="radio" name="radio_respuesta_n_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" id="radio_respuesta_n_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" value="'||CAST(fila2.cod_respuesta AS VARCHAR2)||'"> '||fila2.des_respuesta||'
                                                                       <span class="circle">
                                                                        <span class="check"></span>
                                                                      </span>
                                                                    </label>
                                                                </div>
                                                            ';
                 ELSIF fila2.cod_respuesta = 33 THEN
                      vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-val_respuesta = "'||fila2.val_respuesta||'" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">' ||fila2.des_respuesta||VDIR_PACK_ENCUESTAS.VDIR_FN_GET_LIST_MONEDA||'</div>';                      
                 ELSIF fila2.cod_respuesta = 48 THEN
                     vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-val_respuesta = "'||fila2.val_respuesta||'" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'">' || fila2.des_respuesta||VDIR_PACK_ENCUESTAS.VDIR_FN_GET_LIST_PARENTESCO||'</div> <br>'; 
                 ELSE                  
                   vl_row_respuesta := vl_row_respuesta || '<div class="div_container_respuesta" data-respuesta = "'||CAST(fila2.cod_respuesta AS VARCHAR2)||'" data-val_respuesta = "'||fila2.val_respuesta||'">' ||fila2.des_respuesta||'</div>';
                 END IF;
          END LOOP;  
          
          IF vl_cod_modulo <> fila.cod_modulo AND vl_cod_modulo > 0 THEN                      
             vl_filset_all := vl_filset_all || vl_filset_ini||'<legend class="legend-vd">'||vl_nombre_ant_modulo||'</legend>'||vl_row_pregunta||vl_filset_fin;
             vl_row_pregunta := '';
          END IF;
          
          vl_cod_modulo := fila.cod_modulo; 
          vl_nombre_ant_modulo := fila.des_modulo;        
           
            vl_row_pregunta := vl_row_pregunta || '<div class="row">
                                                       <div class="col-lg-12 col-md-12 col-sm-12 div_container_pregunta" id="pregunta_'||CAST(fila.cod_pregunta AS VARCHAR2)||'" data-pregunta = "'||CAST(fila.cod_pregunta AS VARCHAR2)||'">
                                                         <div class="title">
                                                                <h4 class="obligatorio">'||fila.des_pregunta||'</h4>
                                                         </div>                                                         
                                                           '||vl_row_respuesta||'
                                                        </div>
                                                    </div>';          
         
      END LOOP;
    IF vl_row_pregunta IS NOT NULL AND vl_row_pregunta <> ' ' THEN
        vl_filset_all := vl_filset_all || vl_filset_ini||'<legend class="legend-vd">'||vl_nombre_ant_modulo||'</legend>'||vl_row_pregunta||vl_filset_fin;
    END IF;      
    
     vl_cadena :=  vl_form_ini||vl_filset_all||vl_form_fin;
   
    
    RETURN vl_cadena;
   
   
   END VDIR_FN_GET_DATOS_ENCT;
  

END VDIR_PACK_ENCUESTAS;

/
--------------------------------------------------------
--  DDL for Package Body VDIR_PACK_INICIO_SESSION
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "VDIRMP"."VDIR_PACK_INICIO_SESSION" AS

  FUNCTION VDIR_FN_GET_TIPO_DOCUMENTO RETURN sys_refcursor AS
  vl_cursor  sys_refcursor;
  BEGIN
  
     OPEN vl_cursor
       FOR 
        SELECT
            cod_tipo_identificacion as codigo,
            des_tipo_identificacion as nombre,    
            des_abr as nombre_abr
        FROM
            vdir_tipo_identificacion
        WHERE
          cod_estado = 1
          ORDER BY 2;
    
    RETURN vl_cursor;
  END VDIR_FN_GET_TIPO_DOCUMENTO;
  
  -------------------------------------------------------FUNCION PARA TRAER DATOS DEL SEXO
  
  FUNCTION VDIR_FN_GET_SEXO RETURN sys_refcursor AS
  vl_cursor  sys_refcursor;
  BEGIN
  
     OPEN vl_cursor
       FOR 
        SELECT
            cod_sexo as codigo,
            des_sexo as nombre,    
            des_abr as nombre_abr
        FROM
            vdir_sexo
        WHERE
          cod_estado = 1
          ORDER BY 2;
    
    RETURN vl_cursor;
  END VDIR_FN_GET_SEXO;
  
  
   ------------------------------------------------ PROCEDIMIENTO PARA GUARDAR EL USUARIO  
  PROCEDURE VDIR_SP_GUARDAR_USUARIO(
                             p_tipo_identificacion IN VDIR_PERSONA.COD_TIPO_IDENTIFICACION%TYPE,                            
                             p_numero_identificacion IN VDIR_PERSONA.NUMERO_IDENTIFICACION%TYPE,
                             p_nombre_1 IN VDIR_PERSONA.NOMBRE_1%TYPE,
                             p_nombre_2 IN VDIR_PERSONA.NOMBRE_2%TYPE,
                             p_apellido_1 IN VDIR_PERSONA.APELLIDO_1%TYPE,
                             p_apellido_2 IN VDIR_PERSONA.APELLIDO_2%TYPE,
                             p_fecha_nacimiento IN VARCHAR2, 
                             p_cod_sexo IN VDIR_PERSONA.COD_SEXO%TYPE,
                             p_telefono IN VDIR_PERSONA.TELEFONO%TYPE,
                             p_celular IN VDIR_PERSONA.CELULAR%TYPE,
                             p_email IN VDIR_PERSONA.EMAIL%TYPE,
                             p_usuario IN VDIR_USUARIO.LOGIN%TYPE,
                             p_clave IN VDIR_USUARIO.CLAVE%TYPE,
                             p_tipo_persona IN VDIR_TIPO_PERSONA.COD_TIPO_PERSONA%TYPE,
                             p_plan IN VDIR_PLAN.COD_PLAN%TYPE,
                             p_cod_estado IN VDIR_ESTADO.COD_ESTADO%TYPE,                             
                             p_respuesta OUT VARCHAR2 
                             )
 IS
 
  vl_sec_persona vdir_persona.cod_persona%TYPE;
  vl_sec_usuario vdir_usuario.cod_usuario%TYPE;

 BEGIN
 
     p_respuesta := 'Operaci√≥n realizada correctamente.';
     --se valida si la persona existe con su numero de cedula y el tipo de identificacion 
     
     BEGIN 
      SELECT 
        cod_persona INTO vl_sec_persona   
      FROM 
        VDIR_PERSONA 
      WHERE
       numero_identificacion = p_numero_identificacion 
       AND cod_tipo_identificacion = p_tipo_identificacion;
     EXCEPTION WHEN OTHERS THEN  
     vl_sec_persona := NULL;
     END;       
     
    
   -- si la paersona no existe se inserta  
   IF(vl_sec_persona IS NULL)THEN
   
           SELECT VDIR_SEQ_PERSONA.NEXTVAL INTO vl_sec_persona FROM DUAL ;
   
           INSERT INTO vdir_persona (
            cod_persona,
            cod_tipo_identificacion,
            numero_identificacion,
            nombre_1,
            nombre_2,
            apellido_1,
            apellido_2,
            fecha_nacimiento,
            telefono,
            celular,
            email,            
            cod_sexo,           
            cod_estado
            
        ) VALUES (
           vl_sec_persona,
           p_tipo_identificacion,
           p_numero_identificacion,
           p_nombre_1,
           p_nombre_2,
           p_apellido_1,
           p_apellido_2 ,
           TO_DATE(p_fecha_nacimiento,'YYYY/MM/DD'),                                     
           p_telefono,
           p_celular,
           p_email ,
           p_cod_sexo ,
           p_cod_estado            
        );
   ELSE
       UPDATE vdir_persona
        SET
            cod_tipo_identificacion = p_tipo_identificacion,
            numero_identificacion = p_numero_identificacion,
            nombre_1 = p_nombre_1,
            nombre_2 = p_nombre_2,
            apellido_1 = p_apellido_1,
            apellido_2 = p_apellido_2,
            fecha_nacimiento = TO_DATE(p_fecha_nacimiento,'YYYY/MM/DD'),
            telefono = p_telefono,
            celular = p_celular,
            email = p_email,            
            cod_sexo = p_cod_sexo,           
            cod_estado = p_cod_estado
        WHERE
            cod_persona = vl_sec_persona;
   
   END IF;
   
   -- se inserta el tipo de persona al que pertence el usuario   
   MERGE INTO vdir_persona_tipoper tipop
   USING (
           SELECT
            vl_sec_persona AS cod_persona,
            p_tipo_persona AS cod_tipo_persona
          FROM
             DUAL   
      ) tipop2
   ON (tipop.cod_persona = tipop2.cod_persona AND tipop.cod_tipo_persona = tipop2.cod_tipo_persona)   
   WHEN NOT MATCHED THEN   
    INSERT (tipop.cod_persona_tipoper, tipop.cod_persona,tipop.cod_tipo_persona)
     VALUES (VDIR_SEQ_PERSONA_TIPOPER.NEXTVAL,tipop2.cod_persona, tipop2.cod_tipo_persona);
     
    BEGIN
        SELECT
            cod_usuario INTO vl_sec_usuario       
        FROM
            vdir_usuario
        WHERE
             UPPER(login)=UPPER(p_usuario);
    EXCEPTION WHEN OTHERS THEN
      vl_sec_usuario := NULL;
    END; 
    
    IF(vl_sec_usuario IS NULL)THEN
       
        SELECT VDIR_SEQ_USUARIO.NEXTVAL INTO vl_sec_usuario FROM DUAL ; 
    
        INSERT INTO vdir_usuario (
            cod_usuario,
            login,
            clave,
            cod_persona,
            cod_estado,
            cod_plan
        ) VALUES (
           vl_sec_usuario,
           p_usuario,
           p_clave,
           vl_sec_persona,
           p_cod_estado,
           p_plan
        );
    ELSE
    
        UPDATE vdir_usuario
            SET
                login = p_usuario,
                clave = p_clave,
                cod_persona = vl_sec_persona,
                cod_estado = p_cod_estado,
                cod_plan = p_plan
        WHERE
            cod_usuario = vl_sec_usuario;
        
    END IF;
    
     -- se enlaza el rol con el usuario   
   MERGE INTO vdir_rol_usuario rolusu
   USING (
            SELECT
               vl_sec_usuario AS cod_usuario,
               1   AS cod_rol 
            FROM
                DUAL
             
      ) rolusu2
   ON (rolusu.cod_usuario = rolusu2.cod_usuario AND rolusu.cod_rol = rolusu2.cod_rol)   
   WHEN NOT MATCHED THEN INSERT (rolusu.cod_rol_usuario, rolusu.cod_usuario,rolusu.cod_rol)
     VALUES (VDIR_SEQ_ROL_USUARIO.NEXTVAL,rolusu2.cod_usuario,rolusu2.cod_rol);
    
     
  COMMIT;
  
  EXCEPTION 
    WHEN OTHERS THEN
     RAISE_APPLICATION_ERROR(-20000, 'ban commision.');
     p_respuesta := 'Ocurrio un error en la base de datos.';
   ROLLBACK;

 END VDIR_SP_GUARDAR_USUARIO;
 
 ------------------------------------------------ PROCEDIMIENTO PARA ACTUALIZAR EL CODIGO DE SEGURIDAD PARA CAMBIAR LA CLAVE
 
 PROCEDURE VDIR_SP_ACTUALIZAR_COD_SEG(p_identificacacion IN VDIR_PERSONA.numero_identificacion%TYPE,p_codigo_seguridad OUT VDIR_USUARIO.CODIGO_SEGURIDAD%TYPE)
 
 IS
  vl_codigo_usuario NUMBER;
  vl_codigo_seguridad NUMBER;
 BEGIN  
   
 
    SELECT
       usu.cod_usuario INTO vl_codigo_usuario    
    FROM
        vdir_persona per
        
        INNER JOIN VDIR_USUARIO usu
         ON usu.cod_persona = per.cod_persona
    WHERE
      per.numero_identificacion = p_identificacacion; 
      
    SELECT 
       (1000+ABS(MOD(dbms_random.random,9999))) INTO vl_codigo_seguridad
    FROM   dual;  
      
    UPDATE vdirmp.vdir_usuario
    SET
        codigo_seguridad = vl_codigo_seguridad
    WHERE
       cod_usuario = vl_codigo_usuario;    
      
    p_codigo_seguridad := vl_codigo_seguridad;
    
    COMMIT; 
 
 END VDIR_SP_ACTUALIZAR_COD_SEG;
 
 ------------------------------------------------ PROCEDIMIENTO PARA ACTUALIZAR LA CLAVE DEL USUARIO
 PROCEDURE VDIR_SP_CAMBIAR_CLAVE(p_identificacacion IN VDIR_PERSONA.numero_identificacion%TYPE,p_codigo_seguridad IN VDIR_USUARIO.CODIGO_SEGURIDAD%TYPE, p_clave IN VDIR_USUARIO.CLAVE%TYPE,p_respuesta OUT VARCHAR2)
 
 IS
 
   vl_codigo_usuario NUMBER;   
 
 BEGIN
 
   p_respuesta := 'Operaci√≥n realizada correctamente.';
 
    BEGIN
    SELECT
       usu.cod_usuario INTO vl_codigo_usuario    
    FROM
        vdir_persona per
        
        INNER JOIN VDIR_USUARIO usu
         ON usu.cod_persona = per.cod_persona
         
    WHERE
      per.numero_identificacion = p_identificacacion
      AND usu.CODIGO_SEGURIDAD = p_codigo_seguridad;
     
    EXCEPTION WHEN OTHERS THEN    
     vl_codigo_usuario := NULL;
    END;  
      
    UPDATE vdir_usuario
        SET
            clave = p_clave
    WHERE
        cod_usuario = vl_codigo_usuario;
        
    IF vl_codigo_usuario IS NULL THEN
       p_respuesta := 'El c√≥digo de seguridad no corresponde con el n√∫mero de identificacion.';
    END IF;
        
    COMMIT;
    
     EXCEPTION 
       WHEN OTHERS THEN 
     
     p_respuesta := 'Ocurrio un error en la base de datos.';
     ROLLBACK;  
 
 
 END VDIR_SP_CAMBIAR_CLAVE;
 
 ----------------------------------------------------------------------------  FUNCION PARA TRAER LOS DAOS DE LA PERSONA,USUAIRO Y ROLES 
 FUNCTION VDIR_FN_GET_DATOS_USUARIO(p_login IN vdir_usuario.login%TYPE,p_clave IN vdir_usuario.clave%TYPE) 
   
   RETURN sys_refcursor 
   AS
   
   vl_cursor sys_refcursor;   

    BEGIN
    
  OPEN vl_cursor
    FOR 
     SELECT
        persona.cod_persona ,
        persona.cod_tipo_identificacion,
        ti.DES_TIPO_IDENTIFICACION AS DES_TIP_IDENT_LONG,
        ti.DES_ABR AS DES_TIP_IDENT_SMALL,
        persona.numero_identificacion,
        persona.nombre_1,
        persona.nombre_2,
        persona.apellido_1,
        persona.apellido_2,
        COALESCE(persona.nombre_1,' ')||' '|| COALESCE(persona.nombre_2,' ')||' '|| COALESCE(persona.apellido_1,' ')||' '||COALESCE(persona.apellido_2,' ') AS NOMBRE_COMPLETO,
        persona.fecha_nacimiento,
        trunc(months_between(sysdate, to_char(persona.fecha_nacimiento,'dd/mm/yyyy'))/12) as EDAD,
        persona.telefono,
        persona.email,
        persona.direccion,
        persona.cod_sexo,
        sexo.des_sexo as DESCRIPCION_LONG_SEXO,
        sexo.DES_ABR as DESCRIPCION_SMALL_SEXO,
        persona.cod_municipio,
        persona.fecha_creacion,
        persona.cod_estado,
        persona.celular,
        usu.COD_USUARIO,
        usu.CLAVE,
        usu.LOGIN,
        VDIR_FN_GET_ROLES_PERSONA(usu.COD_USUARIO) as ROLESS
    FROM
        vdir_persona persona
        
        INNER JOIN vdir_usuario usu
         ON usu.cod_persona = persona.cod_persona
        
        INNER JOIN VDIR_SEXO sexo
         ON sexo.cod_sexo = persona.cod_sexo
        
        INNER JOIN  VDIR_TIPO_IDENTIFICACION ti
         ON ti.COD_TIPO_IDENTIFICACION =persona.COD_TIPO_IDENTIFICACION
         
    WHERE
       TRIM(UPPER(usu.login)) = TRIM(UPPER(p_login))
       AND usu.COD_ESTADO = 1
       AND  usu.clave = p_clave; 
       
    RETURN vl_cursor;      
    
    END VDIR_FN_GET_DATOS_USUARIO; 
    
     ------------------------------------------------------------------------------FUNCION PARA TRAER LOS ROLES QUE TIENE UNA PERSONA 
    FUNCTION VDIR_FN_GET_ROLES_PERSONA(p_cod_user IN vdir_usuario.cod_usuario%TYPE) RETURN VARCHAR2
    
    IS
    json_datos VARCHAR2(4000);
    BEGIN
    
      FOR FILA IN (
                     SELECT 
                        ROL.COD_ROL ,
                        ROL.DES_ROL
                      FROM 
                        VDIR_ROL_USUARIO ROL_USER
                        
                        INNER JOIN VDIR_ROL ROL 
                         ON ROL.COD_ROL = ROL_USER.COD_ROL
                      WHERE 
                        ROL_USER.COD_USUARIO = p_cod_user
                        ) LOOP

      JSON_DATOS:= JSON_DATOS ||'{';      
      JSON_DATOS:= JSON_DATOS ||'"CODIGO": "'||FILA.COD_ROL||'",';
      JSON_DATOS:= JSON_DATOS ||'"NOMBRE": "'||FILA.DES_ROL||'"';
      JSON_DATOS:= JSON_DATOS ||'},';

   END LOOP;
    JSON_DATOS:=SUBSTR(JSON_DATOS, 1,LENGTH(JSON_DATOS)-1);
    JSON_DATOS:= JSON_DATOS || ']'; 

    RETURN json_datos; 
    
    END VDIR_FN_GET_ROLES_PERSONA;
    
  ------------------------------------------------ PROCEDIMIENTO PARA INSERTAR EL LOG DE USUARIO
 PROCEDURE VDIR_SP_INSERT_LOG_USER(p_login IN VDIR_USUARIO.login%TYPE,p_ip IN VARCHAR2,p_navegador IN VARCHAR2)
 
 IS
 
 BEGIN 
   
     INSERT INTO vdir_log_usuarios_sistema (
        cod_log_usuarios_sistema,
        usuario,       
        ip,
        navegador
    ) VALUES (
       VDIR_SEQ_LOG_USUARIOS_SISTEMA.NEXTVAL,
       p_login,
       p_ip,
       p_navegador        
    );
 
 END VDIR_SP_INSERT_LOG_USER;
 
  

END VDIR_PACK_INICIO_SESSION;

/
--------------------------------------------------------
--  DDL for Package Body VDIR_PACK_REGISTRO_DATOS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "VDIRMP"."VDIR_PACK_REGISTRO_DATOS" AS
/* ---------------------------------------------------------------------
 Copyright  Tecnolog√≠a Inform√°tica Coomeva - Colombia
 Package     : VDIR_PACK_REGISTRO_DATOS BODY
 Caso de Uso : 
 Descripci√≥n : Procesos para la ejecucion del requerimiento Registro datos basicos
 --------------------------------------------------------------------
 Autor : diego.castillo@kalettre.com
 Fecha : 03-12-2018  
 --------------------------------------------------------------------
 Procedimiento :     Descripcion:
 --------------------------------------------------------------------
 Historia de Modificaciones
 ---------------------------------------------------------------------
 Fecha Autor Modificaci√≥n
 ----------------------------------------------------------------- */

 /*---------------------------------------------------------------------
  fn_get_contratante: Traer la informacion del usuario contratante
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 03-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_contratante
 (
    pty_cod_usuario in vdir_usuario.cod_usuario%type
 )RETURN type_cursor IS
    ltc_datos type_cursor;
 BEGIN 

    OPEN ltc_datos FOR
    SELECT
        persona.cod_persona ,
        persona.cod_tipo_identificacion,
        ti.DES_TIPO_IDENTIFICACION AS DES_TIP_IDENT_LONG,
        ti.DES_ABR AS DES_TIP_IDENT_SMALL,
        persona.numero_identificacion,
        persona.nombre_1,
        persona.nombre_2,
        persona.apellido_1,
        persona.apellido_2,
        COALESCE(persona.nombre_1,' ')||' '|| COALESCE(persona.nombre_2,' ')||' '|| COALESCE(persona.apellido_1,' ')||' '||COALESCE(persona.apellido_2,' ') AS NOMBRE_COMPLETO,
        to_char(persona.fecha_nacimiento,'dd/mm/yyyy') AS fecha_nacimiento,
        trunc(months_between(sysdate, to_char(persona.fecha_nacimiento,'dd/mm/yyyy'))/12) as EDAD,
        persona.telefono,
        persona.email,
        persona.direccion,
        persona.cod_sexo,
        sexo.des_sexo as DESCRIPCION_LONG_SEXO,
        sexo.DES_ABR as DESCRIPCION_SMALL_SEXO,
        persona.cod_municipio,
        persona.fecha_creacion,
        persona.cod_estado,
        persona.celular,
        usu.COD_USUARIO,
        usu.CLAVE,
        usu.LOGIN
    FROM
        vdir_persona persona
        INNER JOIN vdir_usuario usu
         ON usu.cod_persona = persona.cod_persona

        INNER JOIN VDIR_SEXO sexo
         ON sexo.cod_sexo = persona.cod_sexo

        INNER JOIN  VDIR_TIPO_IDENTIFICACION ti
         ON ti.COD_TIPO_IDENTIFICACION =persona.COD_TIPO_IDENTIFICACION

    WHERE
       usu.cod_usuario = pty_cod_usuario;


    RETURN ltc_datos;

 END fn_get_contratante; 

 /*---------------------------------------------------------------------
  fn_get_info_persona: Taer iformacion de la persona con el numero de y tipo de identificacion
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 03-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_info_persona
 (
    pty_num_indentificacion in vdir_persona.numero_identificacion%type,
    pty_tip_indentificacion in vdir_persona.cod_tipo_identificacion%type
 )RETURN type_cursor IS
    ltc_datos type_cursor;
 BEGIN 

    OPEN ltc_datos FOR
    SELECT
        persona.cod_persona ,
        persona.cod_tipo_identificacion,
        ti.DES_TIPO_IDENTIFICACION AS DES_TIP_IDENT_LONG,
        ti.DES_ABR AS DES_TIP_IDENT_SMALL,
        persona.numero_identificacion,
        persona.nombre_1,
        persona.nombre_2,
        persona.apellido_1,
        persona.apellido_2,
        COALESCE(persona.nombre_1,' ')||' '|| COALESCE(persona.nombre_2,' ')||' '|| COALESCE(persona.apellido_1,' ')||' '||COALESCE(persona.apellido_2,' ') AS NOMBRE_COMPLETO,
        to_char(persona.fecha_nacimiento,'dd/mm/yyyy') AS fecha_nacimiento,
        trunc(months_between(sysdate, to_char(persona.fecha_nacimiento,'dd/mm/yyyy'))/12) as EDAD,
        persona.telefono,
        persona.email,
        persona.direccion,
        persona.cod_sexo,
        sexo.des_sexo as DESCRIPCION_LONG_SEXO,
        sexo.DES_ABR as DESCRIPCION_SMALL_SEXO,
        persona.cod_municipio,
        persona.fecha_creacion,
        persona.cod_estado,
        persona.celular,
        usu.COD_USUARIO,
        usu.CLAVE,
        usu.LOGIN
    FROM
        vdir_persona persona
        INNER JOIN vdir_usuario usu ON usu.cod_persona = persona.cod_persona
        INNER JOIN VDIR_SEXO sexo ON sexo.cod_sexo = persona.cod_sexo
        INNER JOIN  VDIR_TIPO_IDENTIFICACION ti ON ti.COD_TIPO_IDENTIFICACION = persona.COD_TIPO_IDENTIFICACION         
    WHERE
       persona.numero_identificacion = pty_num_indentificacion
       AND persona.cod_tipo_identificacion = pty_tip_indentificacion;


    RETURN ltc_datos;

 END fn_get_info_persona; 

END VDIR_PACK_REGISTRO_DATOS;

/
--------------------------------------------------------
--  DDL for Package Body VDIR_PACK_REGISTRO_PRODUCTOS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "VDIRMP"."VDIR_PACK_REGISTRO_PRODUCTOS" AS
/* ---------------------------------------------------------------------
 Copyright  Tecnolog√≠a Inform√°tica Coomeva - Colombia
 Package     : VDIR_PACK_REGISTRO_PRODUCTOS BODY
 Caso de Uso : 
 Descripci√≥n : Procesos para la ejecucion del requerimiento Registro de productos - VENTA DIRECTA
 --------------------------------------------------------------------
 Autor : diego.castillo@kalettre.com
 Fecha : 10-12-2018  
 --------------------------------------------------------------------
 Procedimiento :     Descripcion:
 --------------------------------------------------------------------
 Historia de Modificaciones
 ---------------------------------------------------------------------
 Fecha Autor Modificaci√≥n
 ----------------------------------------------------------------- */

 /*---------------------------------------------------------------------
  fn_get_producto: Traer la informacion del producto y sus programas
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 10-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_producto
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN type_cursor IS
    ltc_datos type_cursor;
 BEGIN 

    OPEN ltc_datos FOR
    SELECT
        cod_producto,
        COALESCE(des_producto, ' ') AS des_producto,
        COALESCE(descripcion, ' ') AS descripcion,
        VDIR_PACK_REGISTRO_PRODUCTOS.fn_get_programaxproducto_str(cod_producto) AS programas
    FROM
        vdir_producto
    WHERE
        cod_producto = CASE WHEN pty_cod_producto = -1 THEN cod_producto ELSE pty_cod_producto END
        AND cod_estado = 1
    ORDER BY cod_producto;


    RETURN ltc_datos;

 END fn_get_producto;

  /*---------------------------------------------------------------------
  fn_get_programaxproducto_str: Traer los programas de cada producto en un string con estructura de objeto
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 11-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_programaxproducto_str
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN VARCHAR2 IS
    ltc_datos type_cursor;
    lv_programas VARCHAR2(4000);
 BEGIN
    lv_programas := '[ ';

    FOR fila IN (SELECT
                    cod_programa,
                    des_programa
                FROM
                    vdir_programa
                WHERE
                    cod_producto = CASE WHEN pty_cod_producto = -1 THEN cod_producto ELSE pty_cod_producto END)
    LOOP
        lv_programas := lv_programas || '{"cod_programa":"' || fila.cod_programa || '",';
        lv_programas := lv_programas || '"des_programa":"' || fila.des_programa || '"},';
    END LOOP;
    lv_programas := SUBSTR(lv_programas, 1,LENGTH(lv_programas)-1)  ||']';

    RETURN lv_programas;

 END fn_get_programaxproducto_str;

 /*---------------------------------------------------------------------
  fn_get_tarifa: Traer la tarifa de un producto de acuerdo al contratante
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 17-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_tarifa
 (
    pty_cod_usuario in vdir_usuario.cod_usuario%type
 )RETURN NUMBER IS
    lv_valor_tarifa NUMBER;
 BEGIN
    lv_valor_tarifa := 5000;


    RETURN lv_valor_tarifa;

 END fn_get_tarifa;

 /*---------------------------------------------------------------------
  fn_get_promocion_producto: Trae la el valor de la promocion a la que aplica un producto
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 17-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_promocion_producto
 (
    pty_cod_producto in vdir_producto.cod_producto%type
 )RETURN NUMBER IS
    lv_valor_promo NUMBER;
 BEGIN

    IF pty_cod_producto = 2 THEN
        lv_valor_promo := 2000;
    ELSE
        lv_valor_promo := -1;
    END IF;


    RETURN lv_valor_promo;

 END fn_get_promocion_producto;

 /*---------------------------------------------------------------------
  sp_set_beneficiario: Agregar beneficiario
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 26-12-2018
 ----------------------------------------------------------------------- */
 PROCEDURE sp_set_beneficiario
 (
    p_cod_contratante in vdir_persona.cod_persona%type,
    p_cod_tipo_doc in vdir_persona.cod_tipo_identificacion%type,
    p_num_doc in vdir_persona.numero_identificacion%type,
    p_nombre_1 in vdir_persona.nombre_1%type,
    p_nombre_2 in vdir_persona.nombre_2%type,
    p_apellido_1 in vdir_persona.apellido_1%type,
    p_apellido_2 in vdir_persona.apellido_2%type,
    p_fecha_nacimiento in vdir_persona.fecha_nacimiento%type,
    p_telefono in vdir_persona.telefono%type,
    p_email in vdir_persona.email%type,
    p_cod_sexo in vdir_persona.cod_sexo%type,
    p_cod_municipio in vdir_persona.cod_municipio%type,
    p_celular in vdir_persona.celular%type,
    p_eps in vdir_persona.cod_eps%type,
    p_estado_civil in vdir_persona.cod_estado_civil%type,
    p_ind_tiene_mascota in vdir_persona.ind_tiene_mascota%type,
    p_tipo_via_dir in vdir_tipo_via.cod_tipo_via%type,
    p_num_tipo_via_dir in varchar2,
    p_num_placa_dir in varchar2,
    p_complemento_dir in varchar2,
    p_parentesco in vdir_parentesco.cod_parentesco%type,
    p_estado in vdir_persona.cod_estado%type,
    p_cod_afiliacion in vdir_afiliacion.cod_afiliacion%type,
    p_cod_afiliacion_out out vdir_afiliacion.cod_afiliacion%type
 ) IS
    lv_des_tipo_via varchar(4000);
    lv_existe_registro integer;
    lv_direccion vdir_persona.direccion%type;
    lv_cod_beneficiario vdir_persona.cod_persona%type;
    lv_cod_afiliacion vdir_afiliacion.cod_afiliacion%type;
    lv_cod_usuario vdir_usuario.cod_usuario%type;
 BEGIN
    lv_existe_registro := 0;
    --Consultar descripcion del tipo via
    SELECT des_tipo_via INTO lv_des_tipo_via FROM vdir_tipo_via WHERE cod_tipo_via = p_tipo_via_dir;
    --Consultar codigo usuario del contratante
    SELECT cod_usuario INTO lv_cod_usuario FROM vdir_usuario WHERE cod_persona = p_cod_contratante;

    lv_direccion := lv_des_tipo_via||' '||p_num_tipo_via_dir||' # '||p_num_placa_dir||' '||p_complemento_dir;
    lv_cod_afiliacion :=  VDIR_PACK_REGISTRO_PRODUCTOS.fn_get_afiliacion_pendiente(lv_cod_usuario);

    --Agregar afiliacion si no existe una pendiente
    IF lv_cod_afiliacion < 0 THEN
        SELECT VDIR_SEQ_AFILIACION.NEXTVAL INTO lv_cod_afiliacion FROM DUAL;
        INSERT INTO vdir_afiliacion (
                            cod_afiliacion,
                            fecha_creacion,
                            cod_estado
                        ) VALUES (
                            lv_cod_afiliacion,
                            SYSDATE,
                            3 --Temporal
                        );
    END IF;   


    --Validar si esxite la persona
    SELECT 
        COUNT(*) INTO lv_existe_registro 
    FROM 
        vdir_persona 
    WHERE 
        cod_tipo_identificacion = p_cod_tipo_doc 
        AND numero_identificacion = p_num_doc;

    IF lv_existe_registro > 0 THEN
        --Obtener codigo de persona
        SELECT 
            cod_persona INTO lv_cod_beneficiario 
        FROM 
            vdir_persona 
        WHERE 
            cod_tipo_identificacion = p_cod_tipo_doc 
            AND numero_identificacion = p_num_doc;
        --Actualizar persona    
        UPDATE vdir_persona
        SET
            nombre_1 = p_nombre_1,
            nombre_2 = p_nombre_2,
            apellido_1 = p_apellido_1,
            apellido_2 = p_apellido_2,
            fecha_nacimiento = p_fecha_nacimiento,
            telefono = p_telefono,
            email = p_email,
            direccion = lv_direccion,
            cod_sexo = p_cod_sexo,
            cod_municipio = p_cod_municipio,
            celular = p_celular,
            cod_eps = p_eps,
            cod_estado_civil = p_estado_civil,
            ind_tiene_mascota = p_ind_tiene_mascota,
            cod_estado = p_estado
        WHERE
            cod_persona = lv_cod_beneficiario;
    ELSE
        --Obtener secuencia persona
        SELECT VDIR_SEQ_PERSONA.NEXTVAL INTO lv_cod_beneficiario FROM DUAL;
        --Agregar persona 
        INSERT INTO vdir_persona (
                cod_persona,
                cod_tipo_identificacion,
                numero_identificacion,
                nombre_1,
                nombre_2,
                apellido_1,
                apellido_2,
                fecha_nacimiento,
                telefono,
                email,
                direccion,
                cod_sexo,
                cod_municipio,
                fecha_creacion,
                cod_estado,
                celular,
                cod_eps,
                cod_estado_civil,
                ind_tiene_mascota
            ) VALUES (
                lv_cod_beneficiario,
                p_cod_tipo_doc,
                p_num_doc,
                p_nombre_1,
                p_nombre_2,
                p_apellido_1,
                p_apellido_2,
                p_fecha_nacimiento,
                p_telefono,
                p_email,
                lv_direccion,
                p_cod_sexo,
                p_cod_municipio,
                SYSDATE,
                p_estado,
                p_celular,
                p_eps,
                p_estado_civil,
                p_ind_tiene_mascota
            );            
    END IF;

    --Validar si existe la relacion entre el beneficiario y el contratante
    SELECT
        COUNT(*) INTO lv_existe_registro
    FROM
        vdir_contratante_beneficiario
    WHERE
        cod_contratante = p_cod_contratante
        AND cod_beneficiario = lv_cod_beneficiario;

    --Agregar o actualizar la relacion entre el beneficiario y el contratante
    IF lv_existe_registro > 0 THEN
        UPDATE vdir_contratante_beneficiario
        SET
            cod_parentesco = p_parentesco,
            cod_afiliacion = lv_cod_afiliacion
        WHERE
            cod_contratante = p_cod_contratante
            AND cod_beneficiario = lv_cod_beneficiario;
    ELSE
        INSERT INTO vdir_contratante_beneficiario (
                cod_contratante_beneficiario,
                cod_contratante,
                cod_beneficiario,
                cod_parentesco,
                cod_afiliacion,
                cod_tipo_solicitud
            ) VALUES (
                VDIR_SEQ_CONTRATANTE_BENEFI.NEXTVAL,
                p_cod_contratante,
                lv_cod_beneficiario,
                p_parentesco,
                lv_cod_afiliacion,
                null
            );
    END IF;

    p_cod_afiliacion_out := lv_cod_afiliacion;

 END sp_set_beneficiario;

  /*---------------------------------------------------------------------
  fn_get_afiliacion_pendiente: Trae afiliacion pendiente
  ----------------------------------------------------------------------
  Autor : diego.castillo@kalettre.com
  Fecha : 27-12-2018
 ----------------------------------------------------------------------- */
 FUNCTION fn_get_afiliacion_pendiente
 (
    pty_cod_usuario in vdir_producto.cod_producto%type
 )RETURN vdir_afiliacion.cod_afiliacion%type IS
    lv_cod_afiliacion vdir_afiliacion.cod_afiliacion%type;
 BEGIN

    BEGIN
      SELECT DISTINCT
          va.cod_afiliacion INTO lv_cod_afiliacion
      FROM
          vdir_usuario us
          INNER JOIN vdir_contratante_beneficiario cb ON cb.cod_contratante = us.cod_persona
          INNER JOIN vdir_afiliacion va ON va.cod_afiliacion = cb.cod_afiliacion          
      WHERE
          us.cod_usuario = pty_cod_usuario
          AND va.cod_estado = 3;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN
      lv_cod_afiliacion := -1;
    END;

    RETURN lv_cod_afiliacion;

 END fn_get_afiliacion_pendiente;


END VDIR_PACK_REGISTRO_PRODUCTOS;

/
--------------------------------------------------------
--  DDL for Package Body VDIR_PACK_UTILIDADES
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "VDIRMP"."VDIR_PACK_UTILIDADES" AS

  FUNCTION VDIR_FN_GETCOLECCION_WHERE(p_nom_cod_tabla IN VARCHAR2,p_nom_des_tabla IN VARCHAR2,p_nom_table IN VARCHAR2,p_aux_where IN VARCHAR2,p_fila_order IN VARCHAR2) RETURN sys_refcursor 
  AS
   
    vl_cursor sys_refcursor; 
    vl_cadena VARCHAR2(3000) DEFAULT '';   
    vl_existe_where VARCHAR2(4000);
    vl_fila_order VARCHAR2(50);    

  BEGIN

   IF(p_aux_where IS NOT NULL) THEN    
      vl_existe_where := ' WHERE ' ||p_aux_where;
   ELSE
      vl_existe_where := '';
   END IF; 

   vl_fila_order := 'ORDER BY '||p_fila_order;

   vl_cadena := 'SELECT ' ||p_nom_cod_tabla || ' AS codigo ,' || p_nom_des_tabla || ' AS nombre FROM ' || p_nom_table || vl_existe_where||' '||vl_fila_order;   

      OPEN vl_cursor
       FOR 
         vl_cadena;

  RETURN vl_cursor;

  END VDIR_FN_GETCOLECCION_WHERE;

  -----------------------------------------------------------------------FUNCION PARA TRAER LA DESCRIPCION DE UN PARAMETRO

  FUNCTION VDIR_FN_GET_PARAMETRO(p_codigoParametro IN NUMBER) 
    RETURN VARCHAR2
    AS  

    v_retorno VARCHAR2(4000);

    BEGIN

      BEGIN     
        SELECT 
          VALOR_PARAMETRO  INTO v_retorno
        FROM 
          VDIR_PARAMETRO 
        WHERE
         COD_PARAMETRO = p_codigoParametro;
      EXCEPTION WHEN OTHERS THEN
       v_retorno := '';
      END;       

    RETURN v_retorno;

    END VDIR_FN_GET_PARAMETRO; 

   ----------------------------------------------------------------------------  FUNCION PARA TRAER LOS DAOS DE LA PERSONA,USUAIRO Y ROLES 
   FUNCTION VDIR_FN_GET_DATOS_PERSONA(p_identificacion IN vdir_persona.numero_identificacion%TYPE) 

   RETURN sys_refcursor 
   AS

   vl_cursor sys_refcursor;   

    BEGIN

  OPEN vl_cursor
    FOR 
     SELECT
        persona.cod_persona ,
        persona.cod_tipo_identificacion,
        ti.DES_TIPO_IDENTIFICACION AS DES_TIP_IDENT_LONG,
        ti.DES_ABR AS DES_TIP_IDENT_SMALL,
        persona.numero_identificacion,
        persona.nombre_1,
        persona.nombre_2,
        persona.apellido_1,
        persona.apellido_2,
        COALESCE(persona.nombre_1,' ')||' '|| COALESCE(persona.nombre_2,' ')||' '|| COALESCE(persona.apellido_1,' ')||' '||COALESCE(persona.apellido_2,' ') AS NOMBRE_COMPLETO,
        persona.fecha_nacimiento,
        trunc(months_between(sysdate, to_char(persona.fecha_nacimiento,'dd/mm/yyyy'))/12) as EDAD,
        persona.telefono,
        persona.email,
        persona.direccion,
        persona.cod_sexo,
        sexo.des_sexo as DESCRIPCION_LONG_SEXO,
        sexo.DES_ABR as DESCRIPCION_SMALL_SEXO,
        persona.cod_municipio,
        persona.fecha_creacion,
        persona.cod_estado,
        persona.celular,
        usu.COD_USUARIO,
        usu.CLAVE,
        usu.LOGIN,
        VDIR_FN_GET_ROLES_PERSONA(usu.COD_USUARIO) as ROLESS
    FROM
        vdir_persona persona

        INNER JOIN vdir_usuario usu
         ON usu.cod_persona = persona.cod_persona

        INNER JOIN VDIR_SEXO sexo
         ON sexo.cod_sexo = persona.cod_sexo

        INNER JOIN  VDIR_TIPO_IDENTIFICACION ti
         ON ti.COD_TIPO_IDENTIFICACION =persona.COD_TIPO_IDENTIFICACION

    WHERE
       persona.numero_identificacion = p_identificacion
       AND usu.COD_ESTADO = 1; 

    RETURN vl_cursor;      

    END VDIR_FN_GET_DATOS_PERSONA; 

  ------------------------------------------------------------------------------FUNCION PARA TRAER LOS ROLES QUE TIENE UNA PERSONA 
    FUNCTION VDIR_FN_GET_ROLES_PERSONA(p_cod_user IN vdir_usuario.cod_usuario%TYPE) RETURN VARCHAR2

    IS
    json_datos VARCHAR2(4000);
    BEGIN

      FOR FILA IN (
                     SELECT 
                        ROL.COD_ROL ,
                        ROL.DES_ROL
                      FROM 
                        VDIR_ROL_USUARIO ROL_USER

                        INNER JOIN VDIR_ROL ROL 
                         ON ROL.COD_ROL = ROL_USER.COD_ROL
                      WHERE 
                        ROL_USER.COD_USUARIO = p_cod_user
                        ) LOOP

      JSON_DATOS:= JSON_DATOS ||'{';      
      JSON_DATOS:= JSON_DATOS ||'"CODIGO": "'||FILA.COD_ROL||'",';
      JSON_DATOS:= JSON_DATOS ||'"NOMBRE": "'||FILA.DES_ROL||'"';
      JSON_DATOS:= JSON_DATOS ||'},';

   END LOOP;
    JSON_DATOS:=SUBSTR(JSON_DATOS, 1,LENGTH(JSON_DATOS)-1);
    JSON_DATOS:= JSON_DATOS || ']'; 

    RETURN json_datos; 

    END VDIR_FN_GET_ROLES_PERSONA;


END VDIR_PACK_UTILIDADES;


/
--------------------------------------------------------
--  DDL for Synonymn DUAL
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "DUAL" FOR "SYS"."DUAL";
--------------------------------------------------------
--  DDL for Synonymn DBMS_RANDOM
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "DBMS_RANDOM" FOR "SYS"."DBMS_RANDOM";
--------------------------------------------------------
--  Constraints for Table VDIR_AFILIACION
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_AFILIACION" MODIFY ("FECHA_CREACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION" ADD CONSTRAINT "VDIR_AFILIACIONES_PK" PRIMARY KEY ("COD_AFILIACION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_AFILIACION_AUDITORIA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" MODIFY ("COD_AFILIACION_AUDITORIA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" MODIFY ("COD_AUDITOR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ADD PRIMARY KEY ("COD_AFILIACION_AUDITORIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_BARRIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_BARRIO" MODIFY ("COD_BARRIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" MODIFY ("DES_BARRIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" MODIFY ("COD_MUNICIPIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" MODIFY ("COD_COMUNA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" ADD PRIMARY KEY ("COD_BARRIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_BENEFICIARIO_PROGRAMA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" MODIFY ("COD_BENEFICIARIO_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" MODIFY ("COD_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" MODIFY ("COD_BENEFICIARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" MODIFY ("COD_TARIFA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ADD PRIMARY KEY ("COD_BENEFICIARIO_PROGRAMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_COMUNA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_COMUNA" MODIFY ("COD_COMUNA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_COMUNA" MODIFY ("DES_COMUNA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_COMUNA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_COMUNA" ADD PRIMARY KEY ("COD_COMUNA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_CONTRATANTE_BENEFICIARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" MODIFY ("COD_CONTRATANTE_BENEFICIARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" MODIFY ("COD_CONTRATANTE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" MODIFY ("COD_BENEFICIARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" MODIFY ("COD_PARENTESCO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD PRIMARY KEY ("COD_CONTRATANTE_BENEFICIARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_DEPARTAMENTO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" MODIFY ("DES_DEPARTAMENTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" MODIFY ("COD_DEPARTAMENTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" MODIFY ("COD_PAIS" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" ADD CONSTRAINT "VDIR_DEPARTAMENTO_PK" PRIMARY KEY ("COD_DEPARTAMENTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_ENCUESTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA" MODIFY ("COD_ENCUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA" MODIFY ("DES_ENCUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA" ADD PRIMARY KEY ("COD_ENCUESTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_ENCUESTA_PERSONA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" MODIFY ("COD_ENCUESTA_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" MODIFY ("COD_ENCUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" ADD PRIMARY KEY ("COD_ENCUESTA_PERSONA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" MODIFY ("FECHA_CREACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_EPS
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_EPS" MODIFY ("COD_EPS" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_EPS" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_EPS" ADD CONSTRAINT "VDIR_EPS_PK" PRIMARY KEY ("COD_EPS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_ESTADO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ESTADO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ESTADO" ADD CONSTRAINT "VDIR_ESTADO_PK" PRIMARY KEY ("COD_ESTADO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_ESTADO_CIVIL
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ESTADO_CIVIL" MODIFY ("COD_ESTADO_CIVIL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ESTADO_CIVIL" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ESTADO_CIVIL" ADD CONSTRAINT "VDIR_ESTADO_CIVIL_PK" PRIMARY KEY ("COD_ESTADO_CIVIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_FACTURA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("COD_FACTURA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("TOTAL_PAGAR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("VALOR_IMPUESTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("SUB_TOTAL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("VALOR_PROMOCION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("COD_TIPO_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("COD_FORMA_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" MODIFY ("COD_USUARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD PRIMARY KEY ("COD_FACTURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_FACTURA_DETALLE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("COD_FACTURA_DETALLE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("VALOR_TOTAL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("SUB_TOTAL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("CANTIDAD" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("VALOR_IMPUESTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("COD_BENEFICIARIO_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" MODIFY ("COD_FACTURA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" ADD PRIMARY KEY ("COD_FACTURA_DETALLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE" MODIFY ("COD_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE" ADD PRIMARY KEY ("COD_FILE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_FILE_AUDITORIA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" MODIFY ("COD_FILE_AUDITORIA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" MODIFY ("COD_AFILIACION_AUDITORIA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" MODIFY ("COD_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" ADD PRIMARY KEY ("COD_FILE_AUDITORIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" MODIFY ("COD_PERSONA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_FILE_BENEFICIARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" MODIFY ("COD_FILE_BENEFICIARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" MODIFY ("COD_AFILIACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" MODIFY ("COD_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" ADD PRIMARY KEY ("COD_FILE_BENEFICIARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" MODIFY ("COD_BENEFICIARIO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_FORMA_PAGO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FORMA_PAGO" MODIFY ("COD_FORMA_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FORMA_PAGO" MODIFY ("DES_FORMA_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FORMA_PAGO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_FORMA_PAGO" ADD PRIMARY KEY ("COD_FORMA_PAGO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_IMPUESTO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" MODIFY ("COD_IMPUESTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" MODIFY ("DES_IMPUESTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" MODIFY ("VALOR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" ADD PRIMARY KEY ("COD_IMPUESTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_LOG_USUARIOS_SISTEMA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" MODIFY ("USUARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" MODIFY ("IP" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" MODIFY ("NAVEGADOR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_LOG_USUARIOS_SISTEMA" ADD PRIMARY KEY ("COD_LOG_USUARIOS_SISTEMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_MENU
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MENU" MODIFY ("COD_MENU" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MENU" MODIFY ("DES_MENU" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MENU" MODIFY ("DES_MENU_LINK" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MENU" ADD PRIMARY KEY ("COD_MENU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_MODULO_ENCUESTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" MODIFY ("COD_MODULO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" ADD PRIMARY KEY ("COD_MODULO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" MODIFY ("DES_MODULO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_MONEDA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MONEDA" MODIFY ("COD_MONEDA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MONEDA" MODIFY ("DES_MONEDA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MONEDA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MONEDA" ADD PRIMARY KEY ("COD_MONEDA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_MUNICIPIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" MODIFY ("DES_MUNICIPIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" MODIFY ("COD_MUNICIPIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" MODIFY ("COD_DEPARTAMENTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" ADD CONSTRAINT "VDIR_MUNICIPIO_PK" PRIMARY KEY ("COD_MUNICIPIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PAIS
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PAIS" MODIFY ("DES_PAIS" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PAIS" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PAIS" MODIFY ("COD_PAIS" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PAIS" ADD CONSTRAINT "VDIR_PAIS_PK" PRIMARY KEY ("COD_PAIS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PARAMETRO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" MODIFY ("COD_PARAMETRO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" MODIFY ("DES_PARAMETRO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" MODIFY ("VALOR_PARAMETRO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" ADD PRIMARY KEY ("COD_PARAMETRO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PARENTESCO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PARENTESCO" MODIFY ("DES_PARENTESCO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARENTESCO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARENTESCO" MODIFY ("COD_PARENTESCO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PARENTESCO" ADD CONSTRAINT "VDIR_PARENTESCO_PK" PRIMARY KEY ("COD_PARENTESCO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PERSONA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("NOMBRE_1" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("APELLIDO_1" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("FECHA_NACIMIENTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("CELULAR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("EMAIL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("FECHA_CREACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("COD_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("COD_TIPO_IDENTIFICACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("NUMERO_IDENTIFICACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" MODIFY ("COD_SEXO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "VDIR_USUARIO_PKV2" PRIMARY KEY ("COD_PERSONA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PERSONA_TIPOPER
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" MODIFY ("COD_PERSONA_TIPOPER" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" MODIFY ("COD_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" MODIFY ("COD_TIPO_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" ADD CONSTRAINT "VDIR_PERSONA_TIPOPER_PK" PRIMARY KEY ("COD_PERSONA_TIPOPER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PLAN
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PLAN" MODIFY ("DES_PLAN" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PLAN" MODIFY ("COD_PLAN" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PLAN" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PLAN" ADD CONSTRAINT "VDIR_PLAN_PK" PRIMARY KEY ("COD_PLAN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PREGUNTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" MODIFY ("COD_PREGUNTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" MODIFY ("DES_PREGUNTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" MODIFY ("COD_ENCUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" ADD PRIMARY KEY ("COD_PREGUNTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PRODUCTO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PRODUCTO" MODIFY ("DES_PRODUCTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PRODUCTO" MODIFY ("COD_PRODUCTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PRODUCTO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PRODUCTO" ADD CONSTRAINT "VDIR_PRODUCTO_PK" PRIMARY KEY ("COD_PRODUCTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PROGRAMA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" MODIFY ("DES_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" MODIFY ("COD_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" MODIFY ("COD_PRODUCTO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" ADD CONSTRAINT "VDIR_PROGRAMA_PK" PRIMARY KEY ("COD_PROGRAMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_PROGRAMA_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" MODIFY ("COD_PROGRAMA_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" MODIFY ("COD_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" MODIFY ("COD_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" ADD PRIMARY KEY ("COD_PROGRAMA_FILE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_RESPUESTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_RESPUESTA" MODIFY ("COD_RESPUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTA" MODIFY ("DES_RESPUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTA" MODIFY ("COD_PREGUNTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTA" ADD PRIMARY KEY ("COD_RESPUESTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTA" MODIFY ("NUMERO_RESPUESTA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_RESPUESTAS_MARCADAS
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" MODIFY ("COD_RESPUESTAS_MARCADAS" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" MODIFY ("COD_RESPUESTA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ADD PRIMARY KEY ("COD_RESPUESTAS_MARCADAS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" MODIFY ("COD_PREGUNTA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VDIR_ROL
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ROL" MODIFY ("DES_ROL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL" MODIFY ("COD_ROL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL" ADD CONSTRAINT "VDIR_ROL_PK" PRIMARY KEY ("COD_ROL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_ROL_USUARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" MODIFY ("COD_ROL_USUARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" MODIFY ("COD_USUARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" MODIFY ("COD_ROL" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" ADD CONSTRAINT "VDIR_ROL_USUARIO_PK" PRIMARY KEY ("COD_ROL_USUARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_SEGURO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_SEGURO" MODIFY ("COD_SEGURO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" MODIFY ("DES_SEGURO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" MODIFY ("COD_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" MODIFY ("VALOR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" ADD PRIMARY KEY ("COD_SEGURO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_SEXO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_SEXO" MODIFY ("DES_SEXO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEXO" MODIFY ("DES_ABR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEXO" MODIFY ("COD_SEXO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEXO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_SEXO" ADD CONSTRAINT "VDIR_SEXO_PK" PRIMARY KEY ("COD_SEXO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TARIFA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("COD_TARIFA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("VALOR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("COD_PROGRAMA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("COD_TIPO_TARIFA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("COD_PLAN" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" ADD CONSTRAINT "VDIR_TARIFA_PK" PRIMARY KEY ("COD_TARIFA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_FILE" MODIFY ("COD_TIPO_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_FILE" MODIFY ("DES_TIPO_FILE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_FILE" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_FILE" ADD PRIMARY KEY ("COD_TIPO_FILE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_IDENTIFICACION
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" MODIFY ("DES_TIPO_IDENTIFICACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" MODIFY ("DES_ABR" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" MODIFY ("COD_TIPO_IDENTIFICACION" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" ADD CONSTRAINT "VDIR_TIPO_IDENTIFICACION_PK" PRIMARY KEY ("COD_TIPO_IDENTIFICACION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_PAGO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_PAGO" MODIFY ("COD_TIPO_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PAGO" MODIFY ("DES_TIPO_PAGO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PAGO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PAGO" ADD PRIMARY KEY ("COD_TIPO_PAGO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_PERSONA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_PERSONA" MODIFY ("DES_TIPO_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PERSONA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PERSONA" MODIFY ("COD_TIPO_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_PERSONA" ADD CONSTRAINT "VDIR_TIPO_PERSONA_PK" PRIMARY KEY ("COD_TIPO_PERSONA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_SOLICITUD
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" MODIFY ("COD_TIPO_SOLICITUD" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" MODIFY ("DES_TIPO_SOLICITUD" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" ADD PRIMARY KEY ("COD_TIPO_SOLICITUD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_TARIFA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_TARIFA" MODIFY ("COD_TIPO_TARIFA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_TARIFA" MODIFY ("DES_TIPO_TARIFA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_TARIFA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_TARIFA" ADD PRIMARY KEY ("COD_TIPO_TARIFA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_TIPO_VIA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_VIA" MODIFY ("COD_TIPO_VIA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_VIA" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_TIPO_VIA" ADD CONSTRAINT "VDIR_TIPO_VIA_PK" PRIMARY KEY ("COD_TIPO_VIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VDIR_USUARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_USUARIO" MODIFY ("CLAVE" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" MODIFY ("COD_PERSONA" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" MODIFY ("COD_USUARIO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" MODIFY ("LOGIN" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" MODIFY ("COD_ESTADO" NOT NULL ENABLE);
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" ADD CONSTRAINT "VDIR_USUARIO_PK" PRIMARY KEY ("COD_USUARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_AFILIACION_AUDITORIA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ADD FOREIGN KEY ("COD_AFILIACION")
	  REFERENCES "VDIRMP"."VDIR_AFILIACION" ("COD_AFILIACION") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ADD FOREIGN KEY ("COD_AUDITOR")
	  REFERENCES "VDIRMP"."VDIR_USUARIO" ("COD_USUARIO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_BARRIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_BARRIO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" ADD FOREIGN KEY ("COD_MUNICIPIO")
	  REFERENCES "VDIRMP"."VDIR_MUNICIPIO" ("COD_MUNICIPIO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BARRIO" ADD FOREIGN KEY ("COD_COMUNA")
	  REFERENCES "VDIRMP"."VDIR_COMUNA" ("COD_COMUNA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_BENEFICIARIO_PROGRAMA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ADD CONSTRAINT "FK_AFILIACION_02" FOREIGN KEY ("COD_AFILIACION")
	  REFERENCES "VDIRMP"."VDIR_AFILIACION" ("COD_AFILIACION") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ADD FOREIGN KEY ("COD_PROGRAMA")
	  REFERENCES "VDIRMP"."VDIR_PROGRAMA" ("COD_PROGRAMA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ADD FOREIGN KEY ("COD_BENEFICIARIO")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ADD FOREIGN KEY ("COD_TARIFA")
	  REFERENCES "VDIRMP"."VDIR_TARIFA" ("COD_TARIFA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_COMUNA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_COMUNA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_CONTRATANTE_BENEFICIARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD CONSTRAINT "FK_AFILIACION_01" FOREIGN KEY ("COD_AFILIACION")
	  REFERENCES "VDIRMP"."VDIR_AFILIACION" ("COD_AFILIACION") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD CONSTRAINT "FK_TIPO_SOLICITUD" FOREIGN KEY ("COD_TIPO_SOLICITUD")
	  REFERENCES "VDIRMP"."VDIR_TIPO_SOLICITUD" ("COD_TIPO_SOLICITUD") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD FOREIGN KEY ("COD_CONTRATANTE")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD FOREIGN KEY ("COD_BENEFICIARIO")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_CONTRATANTE_BENEFICIARIO" ADD FOREIGN KEY ("COD_PARENTESCO")
	  REFERENCES "VDIRMP"."VDIR_PARENTESCO" ("COD_PARENTESCO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_DEPARTAMENTO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_DEPARTAMENTO" ADD CONSTRAINT "DEPARTAMENTO_PAIS_FK" FOREIGN KEY ("COD_PAIS")
	  REFERENCES "VDIRMP"."VDIR_PAIS" ("COD_PAIS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_ENCUESTA_PERSONA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" ADD CONSTRAINT "FK_CONTRATANTE01" FOREIGN KEY ("COD_PERSONA")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_ENCUESTA_PERSONA" ADD FOREIGN KEY ("COD_ENCUESTA")
	  REFERENCES "VDIRMP"."VDIR_ENCUESTA" ("COD_ENCUESTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FACTURA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD FOREIGN KEY ("COD_TIPO_PAGO")
	  REFERENCES "VDIRMP"."VDIR_TIPO_PAGO" ("COD_TIPO_PAGO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD FOREIGN KEY ("COD_FORMA_PAGO")
	  REFERENCES "VDIRMP"."VDIR_FORMA_PAGO" ("COD_FORMA_PAGO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA" ADD FOREIGN KEY ("COD_USUARIO")
	  REFERENCES "VDIRMP"."VDIR_USUARIO" ("COD_USUARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FACTURA_DETALLE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" ADD CONSTRAINT "FK_BENE_IMPUEST" FOREIGN KEY ("COD_BENEFICIARIO_PROGRAMA")
	  REFERENCES "VDIRMP"."VDIR_BENEFICIARIO_PROGRAMA" ("COD_BENEFICIARIO_PROGRAMA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FACTURA_DETALLE" ADD FOREIGN KEY ("COD_FACTURA")
	  REFERENCES "VDIRMP"."VDIR_FACTURA" ("COD_FACTURA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE" ADD FOREIGN KEY ("COD_TIPO_FILE")
	  REFERENCES "VDIRMP"."VDIR_TIPO_FILE" ("COD_TIPO_FILE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FILE_AUDITORIA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" ADD FOREIGN KEY ("COD_AFILIACION_AUDITORIA")
	  REFERENCES "VDIRMP"."VDIR_AFILIACION_AUDITORIA" ("COD_AFILIACION_AUDITORIA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" ADD FOREIGN KEY ("COD_FILE")
	  REFERENCES "VDIRMP"."VDIR_FILE" ("COD_FILE") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_AUDITORIA" ADD CONSTRAINT "VDIR_FILE_AUDITORIA_FK1" FOREIGN KEY ("COD_PERSONA")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FILE_BENEFICIARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" ADD CONSTRAINT "FK_AFILIACION" FOREIGN KEY ("COD_AFILIACION")
	  REFERENCES "VDIRMP"."VDIR_AFILIACION" ("COD_AFILIACION") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" ADD CONSTRAINT "FK_BENEFICIARIO_1" FOREIGN KEY ("COD_BENEFICIARIO")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_FILE_BENEFICIARIO" ADD FOREIGN KEY ("COD_FILE")
	  REFERENCES "VDIRMP"."VDIR_FILE" ("COD_FILE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_FORMA_PAGO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_FORMA_PAGO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_IMPUESTO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_IMPUESTO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_MODULO_ENCUESTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MODULO_ENCUESTA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_MONEDA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MONEDA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_MUNICIPIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_MUNICIPIO" ADD CONSTRAINT "MUNICIPIO_DEPARTAMENTO_FK" FOREIGN KEY ("COD_DEPARTAMENTO")
	  REFERENCES "VDIRMP"."VDIR_DEPARTAMENTO" ("COD_DEPARTAMENTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PARAMETRO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PARAMETRO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PERSONA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "PERSONA_EPS_FK" FOREIGN KEY ("COD_EPS")
	  REFERENCES "VDIRMP"."VDIR_EPS" ("COD_EPS") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "PERSONA_ESTADO_CIVIL_FK" FOREIGN KEY ("COD_ESTADO_CIVIL")
	  REFERENCES "VDIRMP"."VDIR_ESTADO_CIVIL" ("COD_ESTADO_CIVIL") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "PERSONA_MUNICIPIO_FK" FOREIGN KEY ("COD_MUNICIPIO")
	  REFERENCES "VDIRMP"."VDIR_MUNICIPIO" ("COD_MUNICIPIO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "PERSONA_SEXO_FK" FOREIGN KEY ("COD_SEXO")
	  REFERENCES "VDIRMP"."VDIR_SEXO" ("COD_SEXO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA" ADD CONSTRAINT "PERSONA_TIPO_IDENTI_FK" FOREIGN KEY ("COD_TIPO_IDENTIFICACION")
	  REFERENCES "VDIRMP"."VDIR_TIPO_IDENTIFICACION" ("COD_TIPO_IDENTIFICACION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PERSONA_TIPOPER
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" ADD CONSTRAINT "PERSONA_TP_PERSONA_FK" FOREIGN KEY ("COD_PERSONA")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PERSONA_TIPOPER" ADD CONSTRAINT "PERSONA_TP_TIPO_PERSONA_FK" FOREIGN KEY ("COD_TIPO_PERSONA")
	  REFERENCES "VDIRMP"."VDIR_TIPO_PERSONA" ("COD_TIPO_PERSONA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PREGUNTA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" ADD CONSTRAINT "FK_MODULO01" FOREIGN KEY ("COD_MODULO")
	  REFERENCES "VDIRMP"."VDIR_MODULO_ENCUESTA" ("COD_MODULO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PREGUNTA" ADD FOREIGN KEY ("COD_ENCUESTA")
	  REFERENCES "VDIRMP"."VDIR_ENCUESTA" ("COD_ENCUESTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PROGRAMA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" ADD CONSTRAINT "FK_IMPUESTO_01" FOREIGN KEY ("COD_IMPUESTO")
	  REFERENCES "VDIRMP"."VDIR_IMPUESTO" ("COD_IMPUESTO") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA" ADD CONSTRAINT "PROGRAMA_PRODUCTO_FK" FOREIGN KEY ("COD_PRODUCTO")
	  REFERENCES "VDIRMP"."VDIR_PRODUCTO" ("COD_PRODUCTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_PROGRAMA_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" ADD FOREIGN KEY ("COD_FILE")
	  REFERENCES "VDIRMP"."VDIR_FILE" ("COD_FILE") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_PROGRAMA_FILE" ADD FOREIGN KEY ("COD_PROGRAMA")
	  REFERENCES "VDIRMP"."VDIR_PROGRAMA" ("COD_PROGRAMA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_RESPUESTAS_MARCADAS
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ADD FOREIGN KEY ("COD_RESPUESTA")
	  REFERENCES "VDIRMP"."VDIR_RESPUESTA" ("COD_RESPUESTA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_RESPUESTAS_MARCADAS" ADD CONSTRAINT "VDIR_RESPUESTAS_MARCADAS_FK1" FOREIGN KEY ("COD_PREGUNTA")
	  REFERENCES "VDIRMP"."VDIR_PREGUNTA" ("COD_PREGUNTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_ROL_USUARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" ADD CONSTRAINT "ROL_USUARIO_ROL_FK" FOREIGN KEY ("COD_ROL")
	  REFERENCES "VDIRMP"."VDIR_ROL" ("COD_ROL") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_ROL_USUARIO" ADD CONSTRAINT "ROL_USUARIO_USUARIO_FK" FOREIGN KEY ("COD_USUARIO")
	  REFERENCES "VDIRMP"."VDIR_USUARIO" ("COD_USUARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_SEGURO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_SEGURO" ADD FOREIGN KEY ("COD_PROGRAMA")
	  REFERENCES "VDIRMP"."VDIR_PROGRAMA" ("COD_PROGRAMA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_SEGURO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_SEXO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_SEXO" ADD CONSTRAINT "SEXO_ESTADO_FK" FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TARIFA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TARIFA" ADD CONSTRAINT "FK_TIPO_TARIFA" FOREIGN KEY ("COD_TIPO_TARIFA")
	  REFERENCES "VDIRMP"."VDIR_TIPO_TARIFA" ("COD_TIPO_TARIFA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" ADD CONSTRAINT "TARIFA_PLAN_FK" FOREIGN KEY ("COD_PLAN")
	  REFERENCES "VDIRMP"."VDIR_PLAN" ("COD_PLAN") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" ADD CONSTRAINT "TARIFA_PROGRAMA_FK" FOREIGN KEY ("COD_PROGRAMA")
	  REFERENCES "VDIRMP"."VDIR_PROGRAMA" ("COD_PROGRAMA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_TARIFA" ADD CONSTRAINT "VDIR_TARIFA_FK1" FOREIGN KEY ("COD_IMPUESTO")
	  REFERENCES "VDIRMP"."VDIR_IMPUESTO" ("COD_IMPUESTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TIPO_FILE
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_FILE" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TIPO_IDENTIFICACION
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_IDENTIFICACION" ADD CONSTRAINT "TIPO_IDENTIFICACION_EST_FK" FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TIPO_PAGO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_PAGO" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TIPO_SOLICITUD
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_SOLICITUD" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_TIPO_TARIFA
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_TIPO_TARIFA" ADD FOREIGN KEY ("COD_ESTADO")
	  REFERENCES "VDIRMP"."VDIR_ESTADO" ("COD_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VDIR_USUARIO
--------------------------------------------------------

  ALTER TABLE "VDIRMP"."VDIR_USUARIO" ADD CONSTRAINT "FK_PERSONA_01" FOREIGN KEY ("COD_PERSONA")
	  REFERENCES "VDIRMP"."VDIR_PERSONA" ("COD_PERSONA") ENABLE;
 
  ALTER TABLE "VDIRMP"."VDIR_USUARIO" ADD CONSTRAINT "FK_PLAN01" FOREIGN KEY ("COD_PLAN")
	  REFERENCES "VDIRMP"."VDIR_PLAN" ("COD_PLAN") ENABLE;
